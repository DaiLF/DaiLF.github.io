{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u00b6 \\(E = MC^2\\) \u5b66\u5982\u9006\u6c34\u884c\u821f\u3001\u4e0d\u8fdb\u5219\u9000 \u2764\ufe0f Happy Pythoning !","title":"\u6982\u8ff0"},{"location":"#_1","text":"","title":""},{"location":"Linux%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/","text":"Linux \u7cfb\u7edf\u542f\u52a8\u8fc7\u7a0b \u00b6 \u5f88\u591a\u65f6\u5019\u6211\u4eec\u542f\u52a8Linux\u7cfb\u7edf\u7684\u65f6\u5019\uff0c\u5c4f\u5e55\u663e\u793a\u5927\u91cf\u542f\u52a8\u4fe1\u606f\uff0c\u7ed9\u4eba\u4e00\u79cd\u5f88\u590d\u6742\u7684\u6837\u5b50\u3002\u5b9e\u9645\u4e0aLinux\u7684\u542f\u52a8\u8fc7\u7a0b\u5e76\u4e0d\u662f\u60f3\u8c61\u4e2d\u7684\u90a3\u4e48\u590d\u6742\uff0cLinux\u542f\u52a8\u8fc7\u7a0b\u53ef\u4ee5\u5206\u4e3a 5 \u4e2a\u9636\u6bb5\uff1a - \u5185\u6838\u7684\u5f15\u5bfc - \u8fd0\u884c init - \u7cfb\u7edf\u521d\u59cb\u5316 - \u5efa\u7acb\u7ec8\u7aef - \u7528\u6237\u767b\u5f55\u7cfb\u7edf init \u7a0b\u5e8f\u7684\u7c7b\u578b\uff1a SysV : init, Cent5 \u4e4b\u524d\uff0c\u914d\u7f6e\u6587\u4ef6\uff1a /etc/inittab Upstart : init, Cent6, \u914d\u7f6e\u6587\u4ef6\uff1a /etc/inittab, /etc/init/*.conf Systemd : systemd, Cent7, \u914d\u7f6e\u6587\u4ef6\uff1a /usr/lib/systemd/system, /etc/systemd/system 1. \u5185\u6838\u5f15\u5bfc \u00b6 \u5f53\u8ba1\u7b97\u6253\u5f00\u7535\u6e90\u540e\uff0c\u9996\u5148\u7684\u65f6 BIOS \u5f00\u673a\u81ea\u68c0\uff0c\u6309\u7167 BIOS \u4e2d\u8bbe\u7f6e\u7684\u542f\u52a8\u8bbe\u5907\uff08\u901a\u5e38\u662f\u786c\u76d8\uff09\u6765\u542f\u52a8\uff0c\u64cd\u4f5c\u7cfb\u7edf\u63a5\u7ba1\u786c\u4ef6\u4e4b\u540e\uff0c\u9996\u5148\u8bfb\u5165 /boot \u76ee\u5f55\u4e0b\u9762\u7684\u5185\u6838\u6587\u4ef6\u3002 2. \u8fd0\u884c init \u00b6 init \u8fdb\u7a0b\u662f\u7cfb\u7edf\u6240\u6709\u8fdb\u7a0b\u7684\u8d77\u70b9\uff0c\u6ca1\u6709\u8fd9\u4e2a\u8fdb\u7a0b\uff0c\u7cfb\u7edf\u4e2d\u7684\u4efb\u4f55\u8fdb\u7a0b\u90fd\u4e0d\u4f1a\u88ab\u542f\u52a8\uff0c init \u7a0b\u5e8f\u9996\u5148\u9700\u8981\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6 /etc/inittab 3. \u8fd0\u884c\u7ea7\u522b \u00b6 \u663e\u793a\u60c5\u51b5\u4e0b\u5f88\u591a\u7a0b\u5e8f\u9700\u8981\u5f00\u673a\u542f\u52a8\uff0c\u5728 Windows \u7cfb\u7edf\u4e2d\u79f0\u4e3a**\u670d\u52a1**(service)\uff0c\u5728 Linux \u7cfb\u7edf\u4e2d\u79f0\u4e4b\u4e3a**\u5b88\u62a4\u8fdb\u7a0b**(daemon)\u3002 \u5176\u4e2d\uff0c init \u7684\u4e00\u5927\u4efb\u52a1\u5c31\u662f\u53bb\u8fd0\u884c\u8fd9\u4e9b\u5f00\u673a\u542f\u52a8\u7684\u7a0b\u5e8f\uff0c\u4f46\u662f\u4e0d\u540c\u7684\u573a\u666f\u4e0b\u9700\u8981\u542f\u52a8\u4e0d\u540c\u7684\u7a0b\u5e8f\uff0c\u6bd4\u5982\u4f5c\u4e3a web \u670d\u52a1\u5668\u65f6\uff0c\u9700\u8981\u542f\u52a8 Nginx \uff0c\u7528\u4f5c\u684c\u9762\u7a0b\u5e8f\u65f6\uff0c\u5219\u4e0d\u9700\u8981\u8fd9\u4e9b\u7a0b\u5e8f\u3002 Linux \u7cfb\u7edf\u5141\u8bb8\u4e3a\u4e0d\u540c\u7684\u573a\u5408\uff0c\u5206\u914d\u4e0d\u540c\u7684\u5f00\u673a\u542f\u52a8\u7a0b\u5e8f\uff0c\u8fd9\u5c31\u53eb\u505a**\u8fd0\u884c\u7ea7\u522b**(runlevel)\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cLinux \u7cfb\u7edf\u5f00\u673a\u65f6\u6839\u636e**\u8fd0\u884c\u7ea7\u522b**\uff0c\u786e\u5b9a\u9700\u8981\u8fd0\u884c\u90a3\u4e9b\u7a0b\u5e8f\u3002 Linux \u7cfb\u7edf\u6709 7 \u4e2a\u8fd0\u884c\u7ea7\u522b\uff1a - \u8fd0\u884c\u7ea7\u522b0\uff1a\u7cfb\u7edf\u505c\u673a\u72b6\u6001\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u8fd0\u884c\u7ea7\u522b\u4e0d\u80fd\u8bbe\u4e3a0\uff0c\u5426\u5219\u4e0d\u80fd\u6b63\u5e38\u542f\u52a8 - \u8fd0\u884c\u7ea7\u522b1\uff1a\u5355\u7528\u6237\u5de5\u4f5c\u72b6\u6001\uff0croot\u6743\u9650\uff0c\u7528\u4e8e\u7cfb\u7edf\u7ef4\u62a4\uff0c\u7981\u6b62\u8fdc\u7a0b\u767b\u9646 - \u8fd0\u884c\u7ea7\u522b2\uff1a\u591a\u7528\u6237\u72b6\u6001(\u6ca1\u6709NFS) - \u8fd0\u884c\u7ea7\u522b3\uff1a\u5b8c\u5168\u7684\u591a\u7528\u6237\u72b6\u6001(\u6709NFS)\uff0c\u767b\u9646\u540e\u8fdb\u5165\u63a7\u5236\u53f0\u547d\u4ee4\u884c\u6a21\u5f0f - \u8fd0\u884c\u7ea7\u522b4\uff1a\u7cfb\u7edf\u672a\u4f7f\u7528\uff0c\u4fdd\u7559 - \u8fd0\u884c\u7ea7\u522b5\uff1aX11\u63a7\u5236\u53f0\uff0c\u767b\u9646\u540e\u8fdb\u5165\u56fe\u5f62GUI\u6a21\u5f0f - \u8fd0\u884c\u7ea7\u522b6\uff1a\u7cfb\u7edf\u6b63\u5e38\u5173\u95ed\u5e76\u91cd\u542f\uff0c\u9ed8\u8ba4\u8fd0\u884c\u7ea7\u522b\u4e0d\u80fd\u8bbe\u4e3a6\uff0c\u5426\u5219\u4e0d\u80fd\u6b63\u5e38\u542f\u52a8 4. \u7cfb\u7edf\u521d\u59cb\u5316 \u00b6 \u5728 init \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff1a si::sysinit:/etc/rc.d/rc.sysinit \u8c03\u7528\u6267\u884c\u4e86 /etc/rc.d/rc.sysinit \u800c rc.sysinit \u662f\u4e2a bash shell \u7684\u811a\u672c\uff0c\u4e3b\u8981\u8d1f\u8d23\u5b8c\u6210\u4e00\u4e9b\u7cfb\u7edf\u521d\u59cb\u5316\u7684\u5de5\u4f5c\uff0c rc.sysinit \u662f\u6bcf\u4e00\u4e2a\u8fd0\u884c\u7ea7\u522b\u90fd\u8981\u9996\u5148\u8fd0\u884c\u7684\u4e00\u4e2a\u91cd\u8981\u811a\u672c\u3002 5. \u5efa\u7acb\u7ec8\u7aef \u00b6 rc \u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u8fd4\u56de init \u3002\u8fd9\u65f6\u57fa\u672c\u7cfb\u7edf\u73af\u5883\u5df2\u7ecf\u8bbe\u7f6e\u597d\u4e86\uff0c\u5404\u79cd\u5b88\u62a4\u8fdb\u7a0b\u4e5f\u5df2\u7ecf\u542f\u52a8\u4e86\u3002 init \u63a5\u4e0b\u6765\u4f1a\u6253\u5f00 6 \u4e2a\u7ec8\u7aef\uff0c\u4ee5\u4fbf\u7528\u6237\u767b\u5f55\u7cfb\u7edf\u3002\u5728 inittab \u4e2d\u7684\u4ee5\u4e0b 6 \u884c\u5c31\u662f\u5b9a\u4e49\u4e86 6 \u4e2a\u7ec8\u7aef\uff1a 1:2345:respawn:/sbin/mingetty tty1 2:2345:respawn:/sbin/mingetty tty2 3:2345:respawn:/sbin/mingetty tty3 4:2345:respawn:/sbin/mingetty tty4 5:2345:respawn:/sbin/mingetty tty5 6:2345:respawn:/sbin/mingetty tty6 6. \u7528\u6237\u767b\u5f55\u7cfb\u7edf \u00b6 \u4e00\u822c\u6765\u8bf4\uff0c\u7528\u6237\u7684\u767b\u5f55\u65b9\u5f0f\u6709\u4e09\u79cd\uff1a - \u547d\u4ee4\u884c\u767b\u5f55 - ssh \u767b\u5f55 - \u56fe\u5f62\u754c\u9762\u767b\u5f55","title":"Linux \u7cfb\u7edf\u542f\u52a8\u8fc7\u7a0b"},{"location":"Linux%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/#linux","text":"\u5f88\u591a\u65f6\u5019\u6211\u4eec\u542f\u52a8Linux\u7cfb\u7edf\u7684\u65f6\u5019\uff0c\u5c4f\u5e55\u663e\u793a\u5927\u91cf\u542f\u52a8\u4fe1\u606f\uff0c\u7ed9\u4eba\u4e00\u79cd\u5f88\u590d\u6742\u7684\u6837\u5b50\u3002\u5b9e\u9645\u4e0aLinux\u7684\u542f\u52a8\u8fc7\u7a0b\u5e76\u4e0d\u662f\u60f3\u8c61\u4e2d\u7684\u90a3\u4e48\u590d\u6742\uff0cLinux\u542f\u52a8\u8fc7\u7a0b\u53ef\u4ee5\u5206\u4e3a 5 \u4e2a\u9636\u6bb5\uff1a - \u5185\u6838\u7684\u5f15\u5bfc - \u8fd0\u884c init - \u7cfb\u7edf\u521d\u59cb\u5316 - \u5efa\u7acb\u7ec8\u7aef - \u7528\u6237\u767b\u5f55\u7cfb\u7edf init \u7a0b\u5e8f\u7684\u7c7b\u578b\uff1a SysV : init, Cent5 \u4e4b\u524d\uff0c\u914d\u7f6e\u6587\u4ef6\uff1a /etc/inittab Upstart : init, Cent6, \u914d\u7f6e\u6587\u4ef6\uff1a /etc/inittab, /etc/init/*.conf Systemd : systemd, Cent7, \u914d\u7f6e\u6587\u4ef6\uff1a /usr/lib/systemd/system, /etc/systemd/system","title":"Linux \u7cfb\u7edf\u542f\u52a8\u8fc7\u7a0b"},{"location":"Linux%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/#1","text":"\u5f53\u8ba1\u7b97\u6253\u5f00\u7535\u6e90\u540e\uff0c\u9996\u5148\u7684\u65f6 BIOS \u5f00\u673a\u81ea\u68c0\uff0c\u6309\u7167 BIOS \u4e2d\u8bbe\u7f6e\u7684\u542f\u52a8\u8bbe\u5907\uff08\u901a\u5e38\u662f\u786c\u76d8\uff09\u6765\u542f\u52a8\uff0c\u64cd\u4f5c\u7cfb\u7edf\u63a5\u7ba1\u786c\u4ef6\u4e4b\u540e\uff0c\u9996\u5148\u8bfb\u5165 /boot \u76ee\u5f55\u4e0b\u9762\u7684\u5185\u6838\u6587\u4ef6\u3002","title":"1. \u5185\u6838\u5f15\u5bfc"},{"location":"Linux%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/#2-init","text":"init \u8fdb\u7a0b\u662f\u7cfb\u7edf\u6240\u6709\u8fdb\u7a0b\u7684\u8d77\u70b9\uff0c\u6ca1\u6709\u8fd9\u4e2a\u8fdb\u7a0b\uff0c\u7cfb\u7edf\u4e2d\u7684\u4efb\u4f55\u8fdb\u7a0b\u90fd\u4e0d\u4f1a\u88ab\u542f\u52a8\uff0c init \u7a0b\u5e8f\u9996\u5148\u9700\u8981\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6 /etc/inittab","title":"2. \u8fd0\u884c init"},{"location":"Linux%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/#3","text":"\u663e\u793a\u60c5\u51b5\u4e0b\u5f88\u591a\u7a0b\u5e8f\u9700\u8981\u5f00\u673a\u542f\u52a8\uff0c\u5728 Windows \u7cfb\u7edf\u4e2d\u79f0\u4e3a**\u670d\u52a1**(service)\uff0c\u5728 Linux \u7cfb\u7edf\u4e2d\u79f0\u4e4b\u4e3a**\u5b88\u62a4\u8fdb\u7a0b**(daemon)\u3002 \u5176\u4e2d\uff0c init \u7684\u4e00\u5927\u4efb\u52a1\u5c31\u662f\u53bb\u8fd0\u884c\u8fd9\u4e9b\u5f00\u673a\u542f\u52a8\u7684\u7a0b\u5e8f\uff0c\u4f46\u662f\u4e0d\u540c\u7684\u573a\u666f\u4e0b\u9700\u8981\u542f\u52a8\u4e0d\u540c\u7684\u7a0b\u5e8f\uff0c\u6bd4\u5982\u4f5c\u4e3a web \u670d\u52a1\u5668\u65f6\uff0c\u9700\u8981\u542f\u52a8 Nginx \uff0c\u7528\u4f5c\u684c\u9762\u7a0b\u5e8f\u65f6\uff0c\u5219\u4e0d\u9700\u8981\u8fd9\u4e9b\u7a0b\u5e8f\u3002 Linux \u7cfb\u7edf\u5141\u8bb8\u4e3a\u4e0d\u540c\u7684\u573a\u5408\uff0c\u5206\u914d\u4e0d\u540c\u7684\u5f00\u673a\u542f\u52a8\u7a0b\u5e8f\uff0c\u8fd9\u5c31\u53eb\u505a**\u8fd0\u884c\u7ea7\u522b**(runlevel)\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cLinux \u7cfb\u7edf\u5f00\u673a\u65f6\u6839\u636e**\u8fd0\u884c\u7ea7\u522b**\uff0c\u786e\u5b9a\u9700\u8981\u8fd0\u884c\u90a3\u4e9b\u7a0b\u5e8f\u3002 Linux \u7cfb\u7edf\u6709 7 \u4e2a\u8fd0\u884c\u7ea7\u522b\uff1a - \u8fd0\u884c\u7ea7\u522b0\uff1a\u7cfb\u7edf\u505c\u673a\u72b6\u6001\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u8fd0\u884c\u7ea7\u522b\u4e0d\u80fd\u8bbe\u4e3a0\uff0c\u5426\u5219\u4e0d\u80fd\u6b63\u5e38\u542f\u52a8 - \u8fd0\u884c\u7ea7\u522b1\uff1a\u5355\u7528\u6237\u5de5\u4f5c\u72b6\u6001\uff0croot\u6743\u9650\uff0c\u7528\u4e8e\u7cfb\u7edf\u7ef4\u62a4\uff0c\u7981\u6b62\u8fdc\u7a0b\u767b\u9646 - \u8fd0\u884c\u7ea7\u522b2\uff1a\u591a\u7528\u6237\u72b6\u6001(\u6ca1\u6709NFS) - \u8fd0\u884c\u7ea7\u522b3\uff1a\u5b8c\u5168\u7684\u591a\u7528\u6237\u72b6\u6001(\u6709NFS)\uff0c\u767b\u9646\u540e\u8fdb\u5165\u63a7\u5236\u53f0\u547d\u4ee4\u884c\u6a21\u5f0f - \u8fd0\u884c\u7ea7\u522b4\uff1a\u7cfb\u7edf\u672a\u4f7f\u7528\uff0c\u4fdd\u7559 - \u8fd0\u884c\u7ea7\u522b5\uff1aX11\u63a7\u5236\u53f0\uff0c\u767b\u9646\u540e\u8fdb\u5165\u56fe\u5f62GUI\u6a21\u5f0f - \u8fd0\u884c\u7ea7\u522b6\uff1a\u7cfb\u7edf\u6b63\u5e38\u5173\u95ed\u5e76\u91cd\u542f\uff0c\u9ed8\u8ba4\u8fd0\u884c\u7ea7\u522b\u4e0d\u80fd\u8bbe\u4e3a6\uff0c\u5426\u5219\u4e0d\u80fd\u6b63\u5e38\u542f\u52a8","title":"3. \u8fd0\u884c\u7ea7\u522b"},{"location":"Linux%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/#4","text":"\u5728 init \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff1a si::sysinit:/etc/rc.d/rc.sysinit \u8c03\u7528\u6267\u884c\u4e86 /etc/rc.d/rc.sysinit \u800c rc.sysinit \u662f\u4e2a bash shell \u7684\u811a\u672c\uff0c\u4e3b\u8981\u8d1f\u8d23\u5b8c\u6210\u4e00\u4e9b\u7cfb\u7edf\u521d\u59cb\u5316\u7684\u5de5\u4f5c\uff0c rc.sysinit \u662f\u6bcf\u4e00\u4e2a\u8fd0\u884c\u7ea7\u522b\u90fd\u8981\u9996\u5148\u8fd0\u884c\u7684\u4e00\u4e2a\u91cd\u8981\u811a\u672c\u3002","title":"4. \u7cfb\u7edf\u521d\u59cb\u5316"},{"location":"Linux%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/#5","text":"rc \u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u8fd4\u56de init \u3002\u8fd9\u65f6\u57fa\u672c\u7cfb\u7edf\u73af\u5883\u5df2\u7ecf\u8bbe\u7f6e\u597d\u4e86\uff0c\u5404\u79cd\u5b88\u62a4\u8fdb\u7a0b\u4e5f\u5df2\u7ecf\u542f\u52a8\u4e86\u3002 init \u63a5\u4e0b\u6765\u4f1a\u6253\u5f00 6 \u4e2a\u7ec8\u7aef\uff0c\u4ee5\u4fbf\u7528\u6237\u767b\u5f55\u7cfb\u7edf\u3002\u5728 inittab \u4e2d\u7684\u4ee5\u4e0b 6 \u884c\u5c31\u662f\u5b9a\u4e49\u4e86 6 \u4e2a\u7ec8\u7aef\uff1a 1:2345:respawn:/sbin/mingetty tty1 2:2345:respawn:/sbin/mingetty tty2 3:2345:respawn:/sbin/mingetty tty3 4:2345:respawn:/sbin/mingetty tty4 5:2345:respawn:/sbin/mingetty tty5 6:2345:respawn:/sbin/mingetty tty6","title":"5. \u5efa\u7acb\u7ec8\u7aef"},{"location":"Linux%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/#6","text":"\u4e00\u822c\u6765\u8bf4\uff0c\u7528\u6237\u7684\u767b\u5f55\u65b9\u5f0f\u6709\u4e09\u79cd\uff1a - \u547d\u4ee4\u884c\u767b\u5f55 - ssh \u767b\u5f55 - \u56fe\u5f62\u754c\u9762\u767b\u5f55","title":"6. \u7528\u6237\u767b\u5f55\u7cfb\u7edf"},{"location":"Map%E5%AE%9E%E7%8E%B0%E5%B9%B6%E8%A1%8C%E4%BB%BB%E5%8A%A1/","text":"Map \u6982\u8ff0 \u00b6 Python \u7684 map() \u662f\u4e00\u4e2a\u5185\u7f6e\u51fd\u6570\uff0c\u5141\u8bb8\u60a8\u5728\u4e0d\u4f7f\u7528\u663e\u5f0f for \u5faa\u73af\u7684\u60c5\u51b5\u4e0b\u5904\u7406\u548c\u8f6c\u6362 iterable \u4e2d\u7684\u6240\u6709\u9879\uff0c\u8fd9\u79cd\u6280\u672f\u901a\u5e38\u79f0\u4e3a\u6620\u5c04\u3002\u5f53\u60a8\u9700\u8981\u5bf9\u8fed\u4ee3\u4e2d\u7684\u6bcf\u4e2a\u9879\u5e94\u7528\u8f6c\u6362\u51fd\u6570\u5e76\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u65b0\u7684\u8fed\u4ee3\u65f6\uff0c map() \u975e\u5e38\u6709\u7528\u3002 map() \u662f Python \u4e2d\u652f\u6301\u51fd\u6570\u5f0f\u7f16\u7a0b\u98ce\u683c\u7684\u5de5\u5177\u4e4b\u4e00\u3002 Map \u7684\u5c0f\u793a\u4f8b \u00b6 target = [ 1 , 2 , 3 , 4 , 5 ] result = map ( lambda x : x * x , target ) # [1, 4, 9, 16, 25] map() \u00b6 map() \u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u51fd\u6570 f \uff0c\u4e00\u4e2a\u662f\u8fed\u4ee3\u5668\uff08iterator\uff09\uff0c map() \u51fd\u6570\u5728\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08iterable\uff09\u7684\u6ca1\u4e00\u4e2a\u5143\u7d20\u4e0a\u4f9d\u6b21\u6267\u884c\u51fd\u6570 f \uff0c\u5e76\u628a\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u8fed\u4ee3\u5668\u8fd4\u56de\uff0c\u4f8b\u5982\uff1a # \u5b9a\u4e49\u4e00\u4e2a\u65b9\u6cd5 def f ( x ) \uff1a return x * x arr = [ 1 , 2 , 3 ] result = map ( f , arr ) for item in result : print ( item ) \ud83c\udfaf \u9700\u8981\u6ce8\u610f\u7684\u662f map() \u51fd\u6570\u5728 Python2.7 \u4e2d\u8fd4\u56de\u7684\u662f\u5217\u8868\uff0c\u5728 Python3.x \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002 \u5b9e\u9645\u4e0a\u5982\u679c\u4e0a\u8ff0\u662f\u4e00\u4e9b\u6bd4\u8f83\u7b80\u5355\u7684\u64cd\u4f5c\uff0c\u662f\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u751f\u6210\u5f0f\u6765\u5b8c\u6210\u7684\uff0c\u6bd4\u5982\uff1a arr = [ 1 , 2 , 3 ] result = [ x * x for x in arr ] for item in result : print ( item ) \u66f4\u5f3a\u5927\u7684 map() \u00b6 \u901a\u5e38\u6211\u4eec\u4f7f\u7528 map() \u51fd\u6570\u6765\u6279\u91cf\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u4f8b\u5982\u6279\u91cf\u8bf7\u6c42url\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u7b49\u4ef7\u7684\u3002 urls = [ \"https://www.yahoo.com\" , \"https://www.google.com\" ] result = map ( urllib2 . urlopen , urls ) results = [] for url in urls : results . append ( urllib2 . urlopen ( url )) \ud83e\udd2a \u5b9e\u65f6\u4e0a\uff0cmap() \u4e0d\u4ec5\u4ec5\u53ef\u4ee5\u505a\u7b80\u5355\u7684\u8fed\u4ee3\u8fd0\u7b97\uff0c\u4f7f\u7528\u6070\u5f53\u7684\u5e93\uff0cmap() \u51fd\u6570\u53ef\u4ee5\u8f7b\u677e\u7684\u5b9e\u73b0\u591a\u6838\u5e76\u884c\u8fd0\u7b97\u3002 Python \u6807\u51c6\u5e93\u4e2d\u7684 multiprocessing \u6a21\u5757\uff0c\u6709\u7740\u4e00\u4e2a\u6781\u5c11\u4eba\u77e5\u4f46\u6781\u4e3a\u51fa\u8272\u7684\u5b50\u6a21\u5757 multiprocessing.dummy \uff0c\u76d6\u5b50\u6a21\u5757\u63d0\u4f9b\u4e86 map() \u51fd\u6570\u7684\u5e76\u884c\u7248\u672c\u3002 multiprocessing.dummy \u662f multiprocessing \u6a21\u5757\u7684\u514b\u9686\u7248\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\uff1a multiprocessing \u662f\u57fa\u4e8e**\u8fdb\u7a0b**\u5de5\u4f5c\uff0c\u800c multiprocessing.dummy \u5b50\u6a21\u5757\u4f7f\u7528\u7684\u662f\u7ebf\u7a0b\u3002 \u5c0f\u8bd5\u725b\u5200 \u00b6 # \u5f15\u5165\u4ee5\u4e0b\u4efb\u610f\u4e00\u884c\u5373\u53ef from multiprocessing import Pool from multiprocerssing.dummy import Pool as ThreadPool \u5b9e\u4f8b\u5316\u6c60\u5bf9\u8c61\uff1a pool = ThreadPool () \u8fd9\u53e5\u4ee3\u7801\u4f1a\u521b\u5efa\u4e00\u7ec4\u53ef\u7528\u7684 worker \uff0c\u542f\u52a8\u51c6\u5907\u5de5\u4f5c\u5e76\u5b58\u5165\u53d8\u91cf\u65b9\u4fbf\u8c03\u7528\u3002 pool \u5bf9\u8c61\u53ef\u4ee5\u4f20\u5165\u82e5\u5e72\u53c2\u6570\uff0c\u4f46\u76ee\u524d\u53ea\u9700\u5173\u6ce8\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a**\u8fdb\u7a0b/\u7ebf\u7a0b\u6570**\u6570\u91cf\uff0c\u8fd9\u4e2a\u53c2\u6570\u7528\u4e8e\u8bbe\u7f6e\u6c60\u4e2d\u7684 worker \u6570\u91cf\uff0c\u9ed8\u8ba4\u503c\u4e3a\u673a\u5668\u7684 CPU \u6838\u6570\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u5982\u679c\u4e3a CPU \u5bc6\u96c6\u578b\u4efb\u52a1\u4f7f\u7528\u8fdb\u7a0b\u6c60\uff08 multiprocessing pool \uff09\uff0c\u66f4\u591a\u7684\u6838\u5fc3\u6570\u610f\u5473\u7740\u66f4\u5feb\u7684\u901f\u5ea6\uff0c\u4f46\u662f\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff08 threading \uff09\u6765\u5904\u7406 IO \u5bc6\u96c6\u578b\u4efb\u52a1\u65f6\uff0c\u4e0d\u4e00\u5b9a\u662f\u6838\u5fc3\u6570\u8d8a\u591a\u8d8a\u597d\uff0c\u8fd9\u65f6\u9700\u8981\u8bd5\u9a8c\u4e00\u4e0b\u786e\u5b9a\u6c60\u7684\u6700\u4f73\u5927\u5c0f\u3002 pool = ThreadPool ( 4 ) # \u5c06\u6c60\u7684\u5927\u5c0f\u8bbe\u4e3a4 \u5982\u679c\u521b\u5efa\u4e86\u8fc7\u591a\u7684\u7ebf\u7a0b\uff0c CPU \u4f1a\u6d6a\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u5728\u7ebf\u7a0b\u5207\u6362\u4e0a\uff0c\u800c\u4e0d\u662f\u505a\u6709\u7528\u7684\u4e8b\u60c5\uff0c\u6240\u4ee5\u9700\u8981\u8bbe\u7f6e\u597d\u5408\u9002\u7684\u7ebf\u7a0b\u6570\u3002 \u793a\u4f8b \u00b6 import urllib2 from multiprocessing.dummy import Pool as ThreadPool urls = [ 'http://www.python.org' , 'http://www.python.org/about/' , 'http://www.onlamp.com/pub/a/python/2003/04/17/metaclasses.html' , 'http://www.python.org/doc/' , 'http://www.python.org/download/' , 'http://www.python.org/getit/' , 'http://www.python.org/community/' , 'https://wiki.python.org/moin/' , 'http://planet.python.org/' , 'https://wiki.python.org/moin/LocalUserGroups' , 'http://www.python.org/psf/' , 'http://docs.python.org/devguide/' , 'http://www.python.org/community/awards/' # ... ] # \u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u8005\u7ebf\u7a0b\u6c60 pool = ThreadPool ( 4 ) # \u5728\u5404\u4e2a\u7ebf\u7a0b\u4e2d\u6253\u5f00url\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c results = pool . map ( urllib2 . urlopen , urls ) #close the pool and wait for the work to finish # \u5173\u95ed\u7ebf\u7a0b\u6c60\uff0c\u7b49\u5f85\u5de5\u4f5c\u7ed3\u675f pool . close () pool . join () \u603b\u7ed3 \u00b6 multiprocessing.dummy \u901a\u8fc7\u81ea\u52a8\u5207\u6362 CPU \u5bc6\u96c6\u578b\u5de5\u4f5c\u548c IO \u5bc6\u96c6\u5de5\u4f5c\u5e76\u5206\u914d\u5230\u5404\u81ea\u7684\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u4ee5\u83b7\u5f97\u66f4\u5feb\u7684\u901f\u5ea6\uff0c\u800c\u65e0\u9700\u624b\u52a8\u7684\u7ba1\u7406\u7ebf\u7a0b\u548c\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u66f4\u52a0\u5e72\u51c0\u3001\u53ef\u9760\u3001\u7b80\u5355\u7684\u6df7\u5408\u4f7f\u7528\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u3002 \u76f8\u5173\u6587\u7ae0 \u00b6 Python \u89e3\u51b3\u591a\u6838\u5904\u7406\u5668\u7b97\u529b\u6d6a\u8d39\u7684\u73b0\u8c61","title":"Map \u7684\u827a\u672f"},{"location":"Map%E5%AE%9E%E7%8E%B0%E5%B9%B6%E8%A1%8C%E4%BB%BB%E5%8A%A1/#map","text":"Python \u7684 map() \u662f\u4e00\u4e2a\u5185\u7f6e\u51fd\u6570\uff0c\u5141\u8bb8\u60a8\u5728\u4e0d\u4f7f\u7528\u663e\u5f0f for \u5faa\u73af\u7684\u60c5\u51b5\u4e0b\u5904\u7406\u548c\u8f6c\u6362 iterable \u4e2d\u7684\u6240\u6709\u9879\uff0c\u8fd9\u79cd\u6280\u672f\u901a\u5e38\u79f0\u4e3a\u6620\u5c04\u3002\u5f53\u60a8\u9700\u8981\u5bf9\u8fed\u4ee3\u4e2d\u7684\u6bcf\u4e2a\u9879\u5e94\u7528\u8f6c\u6362\u51fd\u6570\u5e76\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u65b0\u7684\u8fed\u4ee3\u65f6\uff0c map() \u975e\u5e38\u6709\u7528\u3002 map() \u662f Python \u4e2d\u652f\u6301\u51fd\u6570\u5f0f\u7f16\u7a0b\u98ce\u683c\u7684\u5de5\u5177\u4e4b\u4e00\u3002","title":"Map \u6982\u8ff0"},{"location":"Map%E5%AE%9E%E7%8E%B0%E5%B9%B6%E8%A1%8C%E4%BB%BB%E5%8A%A1/#map_1","text":"target = [ 1 , 2 , 3 , 4 , 5 ] result = map ( lambda x : x * x , target ) # [1, 4, 9, 16, 25]","title":"Map \u7684\u5c0f\u793a\u4f8b"},{"location":"Map%E5%AE%9E%E7%8E%B0%E5%B9%B6%E8%A1%8C%E4%BB%BB%E5%8A%A1/#map_2","text":"map() \u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u51fd\u6570 f \uff0c\u4e00\u4e2a\u662f\u8fed\u4ee3\u5668\uff08iterator\uff09\uff0c map() \u51fd\u6570\u5728\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08iterable\uff09\u7684\u6ca1\u4e00\u4e2a\u5143\u7d20\u4e0a\u4f9d\u6b21\u6267\u884c\u51fd\u6570 f \uff0c\u5e76\u628a\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u8fed\u4ee3\u5668\u8fd4\u56de\uff0c\u4f8b\u5982\uff1a # \u5b9a\u4e49\u4e00\u4e2a\u65b9\u6cd5 def f ( x ) \uff1a return x * x arr = [ 1 , 2 , 3 ] result = map ( f , arr ) for item in result : print ( item ) \ud83c\udfaf \u9700\u8981\u6ce8\u610f\u7684\u662f map() \u51fd\u6570\u5728 Python2.7 \u4e2d\u8fd4\u56de\u7684\u662f\u5217\u8868\uff0c\u5728 Python3.x \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002 \u5b9e\u9645\u4e0a\u5982\u679c\u4e0a\u8ff0\u662f\u4e00\u4e9b\u6bd4\u8f83\u7b80\u5355\u7684\u64cd\u4f5c\uff0c\u662f\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u751f\u6210\u5f0f\u6765\u5b8c\u6210\u7684\uff0c\u6bd4\u5982\uff1a arr = [ 1 , 2 , 3 ] result = [ x * x for x in arr ] for item in result : print ( item )","title":"map()"},{"location":"Map%E5%AE%9E%E7%8E%B0%E5%B9%B6%E8%A1%8C%E4%BB%BB%E5%8A%A1/#map_3","text":"\u901a\u5e38\u6211\u4eec\u4f7f\u7528 map() \u51fd\u6570\u6765\u6279\u91cf\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u4f8b\u5982\u6279\u91cf\u8bf7\u6c42url\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u7b49\u4ef7\u7684\u3002 urls = [ \"https://www.yahoo.com\" , \"https://www.google.com\" ] result = map ( urllib2 . urlopen , urls ) results = [] for url in urls : results . append ( urllib2 . urlopen ( url )) \ud83e\udd2a \u5b9e\u65f6\u4e0a\uff0cmap() \u4e0d\u4ec5\u4ec5\u53ef\u4ee5\u505a\u7b80\u5355\u7684\u8fed\u4ee3\u8fd0\u7b97\uff0c\u4f7f\u7528\u6070\u5f53\u7684\u5e93\uff0cmap() \u51fd\u6570\u53ef\u4ee5\u8f7b\u677e\u7684\u5b9e\u73b0\u591a\u6838\u5e76\u884c\u8fd0\u7b97\u3002 Python \u6807\u51c6\u5e93\u4e2d\u7684 multiprocessing \u6a21\u5757\uff0c\u6709\u7740\u4e00\u4e2a\u6781\u5c11\u4eba\u77e5\u4f46\u6781\u4e3a\u51fa\u8272\u7684\u5b50\u6a21\u5757 multiprocessing.dummy \uff0c\u76d6\u5b50\u6a21\u5757\u63d0\u4f9b\u4e86 map() \u51fd\u6570\u7684\u5e76\u884c\u7248\u672c\u3002 multiprocessing.dummy \u662f multiprocessing \u6a21\u5757\u7684\u514b\u9686\u7248\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\uff1a multiprocessing \u662f\u57fa\u4e8e**\u8fdb\u7a0b**\u5de5\u4f5c\uff0c\u800c multiprocessing.dummy \u5b50\u6a21\u5757\u4f7f\u7528\u7684\u662f\u7ebf\u7a0b\u3002","title":"\u66f4\u5f3a\u5927\u7684 map()"},{"location":"Map%E5%AE%9E%E7%8E%B0%E5%B9%B6%E8%A1%8C%E4%BB%BB%E5%8A%A1/#_1","text":"# \u5f15\u5165\u4ee5\u4e0b\u4efb\u610f\u4e00\u884c\u5373\u53ef from multiprocessing import Pool from multiprocerssing.dummy import Pool as ThreadPool \u5b9e\u4f8b\u5316\u6c60\u5bf9\u8c61\uff1a pool = ThreadPool () \u8fd9\u53e5\u4ee3\u7801\u4f1a\u521b\u5efa\u4e00\u7ec4\u53ef\u7528\u7684 worker \uff0c\u542f\u52a8\u51c6\u5907\u5de5\u4f5c\u5e76\u5b58\u5165\u53d8\u91cf\u65b9\u4fbf\u8c03\u7528\u3002 pool \u5bf9\u8c61\u53ef\u4ee5\u4f20\u5165\u82e5\u5e72\u53c2\u6570\uff0c\u4f46\u76ee\u524d\u53ea\u9700\u5173\u6ce8\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a**\u8fdb\u7a0b/\u7ebf\u7a0b\u6570**\u6570\u91cf\uff0c\u8fd9\u4e2a\u53c2\u6570\u7528\u4e8e\u8bbe\u7f6e\u6c60\u4e2d\u7684 worker \u6570\u91cf\uff0c\u9ed8\u8ba4\u503c\u4e3a\u673a\u5668\u7684 CPU \u6838\u6570\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u5982\u679c\u4e3a CPU \u5bc6\u96c6\u578b\u4efb\u52a1\u4f7f\u7528\u8fdb\u7a0b\u6c60\uff08 multiprocessing pool \uff09\uff0c\u66f4\u591a\u7684\u6838\u5fc3\u6570\u610f\u5473\u7740\u66f4\u5feb\u7684\u901f\u5ea6\uff0c\u4f46\u662f\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff08 threading \uff09\u6765\u5904\u7406 IO \u5bc6\u96c6\u578b\u4efb\u52a1\u65f6\uff0c\u4e0d\u4e00\u5b9a\u662f\u6838\u5fc3\u6570\u8d8a\u591a\u8d8a\u597d\uff0c\u8fd9\u65f6\u9700\u8981\u8bd5\u9a8c\u4e00\u4e0b\u786e\u5b9a\u6c60\u7684\u6700\u4f73\u5927\u5c0f\u3002 pool = ThreadPool ( 4 ) # \u5c06\u6c60\u7684\u5927\u5c0f\u8bbe\u4e3a4 \u5982\u679c\u521b\u5efa\u4e86\u8fc7\u591a\u7684\u7ebf\u7a0b\uff0c CPU \u4f1a\u6d6a\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u5728\u7ebf\u7a0b\u5207\u6362\u4e0a\uff0c\u800c\u4e0d\u662f\u505a\u6709\u7528\u7684\u4e8b\u60c5\uff0c\u6240\u4ee5\u9700\u8981\u8bbe\u7f6e\u597d\u5408\u9002\u7684\u7ebf\u7a0b\u6570\u3002","title":"\u5c0f\u8bd5\u725b\u5200"},{"location":"Map%E5%AE%9E%E7%8E%B0%E5%B9%B6%E8%A1%8C%E4%BB%BB%E5%8A%A1/#_2","text":"import urllib2 from multiprocessing.dummy import Pool as ThreadPool urls = [ 'http://www.python.org' , 'http://www.python.org/about/' , 'http://www.onlamp.com/pub/a/python/2003/04/17/metaclasses.html' , 'http://www.python.org/doc/' , 'http://www.python.org/download/' , 'http://www.python.org/getit/' , 'http://www.python.org/community/' , 'https://wiki.python.org/moin/' , 'http://planet.python.org/' , 'https://wiki.python.org/moin/LocalUserGroups' , 'http://www.python.org/psf/' , 'http://docs.python.org/devguide/' , 'http://www.python.org/community/awards/' # ... ] # \u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u8005\u7ebf\u7a0b\u6c60 pool = ThreadPool ( 4 ) # \u5728\u5404\u4e2a\u7ebf\u7a0b\u4e2d\u6253\u5f00url\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c results = pool . map ( urllib2 . urlopen , urls ) #close the pool and wait for the work to finish # \u5173\u95ed\u7ebf\u7a0b\u6c60\uff0c\u7b49\u5f85\u5de5\u4f5c\u7ed3\u675f pool . close () pool . join ()","title":"\u793a\u4f8b"},{"location":"Map%E5%AE%9E%E7%8E%B0%E5%B9%B6%E8%A1%8C%E4%BB%BB%E5%8A%A1/#_3","text":"multiprocessing.dummy \u901a\u8fc7\u81ea\u52a8\u5207\u6362 CPU \u5bc6\u96c6\u578b\u5de5\u4f5c\u548c IO \u5bc6\u96c6\u5de5\u4f5c\u5e76\u5206\u914d\u5230\u5404\u81ea\u7684\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u4ee5\u83b7\u5f97\u66f4\u5feb\u7684\u901f\u5ea6\uff0c\u800c\u65e0\u9700\u624b\u52a8\u7684\u7ba1\u7406\u7ebf\u7a0b\u548c\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u66f4\u52a0\u5e72\u51c0\u3001\u53ef\u9760\u3001\u7b80\u5355\u7684\u6df7\u5408\u4f7f\u7528\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u3002","title":"\u603b\u7ed3"},{"location":"Map%E5%AE%9E%E7%8E%B0%E5%B9%B6%E8%A1%8C%E4%BB%BB%E5%8A%A1/#_4","text":"Python \u89e3\u51b3\u591a\u6838\u5904\u7406\u5668\u7b97\u529b\u6d6a\u8d39\u7684\u73b0\u8c61","title":"\u76f8\u5173\u6587\u7ae0"},{"location":"Python%E5%A4%9A%E7%BA%BF%E7%A8%8B/","text":"\u591a\u7ebf\u7a0b \u00b6 Python\u521b\u5efa\u591a\u7ebf\u7a0b\u7684\u65b9\u6cd5\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0\u3002 1. \u7ebf\u7a0b\u901a\u4fe1\u673a\u5236 \u00b6 \u8981\u5b9e\u73b0\u5bf9\u591a\u4e2a\u7ebf\u7a0b\u8fdb\u884c\u63a7\u5236\uff0c\u5176\u5b9e\u672c\u8d28\u4e0a\u5c31\u662f\u6d88\u606f\u673a\u5236\uff0c\u5229\u7528\u6d88\u606f\u673a\u5236\u53d1\u9001\u6307\u4ee4\u6765\u63a7\u5236\u7ebf\u7a0b\u3002 \u7ebf\u7a0b\u901a\u4fe1\u65b9\u6cd5 \u4e8b\u4ef6\uff1a threading.Event \u6761\u4ef6\uff1a threading.Condition \u961f\u5217\uff1a queue.Queue 2. Event \u4e8b\u4ef6 \u00b6 Python \u63d0\u4f9b\u4e86\u975e\u5e38\u7b80\u5355\u7684\u901a\u4fe1\u673a\u5236 Threading.Event \uff0c\u901a\u7528\u6761\u4ef6\u53d8\u91cf\uff0c\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u901a\u8fc7\u7b49\u5f85\u67d0\u4e2a\u4e8b\u4ef6\u7684\u53d1\u751f\uff0c\u5728\u4e8b\u4ef6\u53d1\u751f\u4e4b\u540e\uff0c\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u4f1a\u88ab\u6fc0\u6d3b\u3002 event = threading . Event () # \u91cd\u7f6eevent\uff0c\u4f7f\u5f97\u8be5event\u5904\u4e8e\u5f85\u547d\u72b6\u6001 event . clear () # \u7b49\u5f85\u63a5\u6536event\u7684\u6307\u4ee4\uff0c\u51b3\u5b9a\u662f\u5426\u963b\u585e\u7a0b\u5e8f\u7684\u6267\u884c event . wait () # \u53d1\u9001event\u6307\u4ee4\uff0c\u4f7f\u6240\u6709\u8bbe\u7f6e\u8be5event\u4e8b\u4ef6\u7684\u7ebf\u7a0b\u6267\u884c event . set () \u793a\u4f8b\uff1a import time import threading class MyThread ( threading . Thread ): def __init__ ( self , name , event ): super () . __init__ () self . name = name self . event = event def run ( self ): print ( \"Thread: {0} start at {1} \" . format ( self . name , time . ctime ( time . time ()))) self . event . wait () print ( \"Thread: {0} finished at {1} \" . format ( self . name , time . ctime ( time . time ()))) event = threading . Event () threads = [ MyThread ( str ( i ), event ) for i in range ( 1 , 5 )] event . clear () for item in threads : item . start () print ( '\u7b49\u5f855s...' ) time . sleep ( 5 ) print ( '\u5524\u9192\u6240\u6709\u7ebf\u7a0b...' ) event . start () \u8f93\u51fa\uff1a Thread: 1 start at Sun May 13 20:38:08 2018 Thread: 2 start at Sun May 13 20:38:08 2018 Thread: 3 start at Sun May 13 20:38:08 2018 Thread: 4 start at Sun May 13 20:38:08 2018 \u7b49\u5f855s... \u5524\u9192\u6240\u6709\u7ebf\u7a0b... Thread: 1 finish at Sun May 13 20:38:13 2018 Thread: 4 finish at Sun May 13 20:38:13 2018 Thread: 2 finish at Sun May 13 20:38:13 2018 Thread: 3 finish at Sun May 13 20:38:13 2018 \u53ef\u89c1\u5728\u6240\u6709\u7ebf\u7a0b\u542f\u52a8\u540e\uff0c\u7ebf\u7a0b\u5e76\u4e0d\u4f1a\u6267\u884c\u5b8c\u6210\uff0c\u800c\u662f\u5728 self.event.wait() \u5904\u505c\u6b62\u4e86\uff0c\u9700\u8981\u6211\u4eec\u901a\u8fc7 event.set() \u6765\u7ed9\u6240\u6709\u7ebf\u7a0b\u53d1\u9001\u6307\u4ee4\u624d\u80fd\u7ee7\u7eed\u6267\u884c\u3002 3. Condition \u00b6 Condition\u548cEvent \u662f\u7c7b\u4f3c\u7684\uff0c\u5e76\u6ca1\u6709\u591a\u5927\u533a\u522b\u3002 cond = threading . Condition () # \u7c7b\u4f3clock.acquire() cond . acquire () # \u7c7b\u4f3clock.release() cond . release () # \u7b49\u5f85\u6307\u5b9a\u89e6\u53d1\uff0c\u540c\u65f6\u4f1a\u91ca\u653e\u5bf9\u9501\u7684\u83b7\u53d6,\u76f4\u5230\u88abnotify\u624d\u91cd\u65b0\u5360\u6709\u7410\u3002 cond . wait () # \u53d1\u9001\u6307\u5b9a\uff0c\u89e6\u53d1\u6267\u884c cond . notify () \u793a\u4f8b\uff1a import threading , time class Hider ( threading . Thread ): def __init__ ( self , cond , name ): super ( Hider , self ) . __init__ () self . cond = cond self . name = name def run ( self ): time . sleep ( 1 ) #\u786e\u4fdd\u5148\u8fd0\u884cSeeker\u4e2d\u7684\u65b9\u6cd5 self . cond . acquire () print ( self . name + ': \u6211\u5df2\u7ecf\u628a\u773c\u775b\u8499\u4e0a\u4e86' ) self . cond . notify () self . cond . wait () print ( self . name + ': \u6211\u627e\u5230\u4f60\u4e86\u54e6 ~_~' ) self . cond . notify () self . cond . release () print ( self . name + ': \u6211\u8d62\u4e86' ) class Seeker ( threading . Thread ): def __init__ ( self , cond , name ): super ( Seeker , self ) . __init__ () self . cond = cond self . name = name def run ( self ): self . cond . acquire () self . cond . wait () print ( self . name + ': \u6211\u5df2\u7ecf\u85cf\u597d\u4e86\uff0c\u4f60\u5feb\u6765\u627e\u6211\u5427' ) self . cond . notify () self . cond . wait () self . cond . release () print ( self . name + ': \u88ab\u4f60\u627e\u5230\u4e86\uff0c\u54ce~~~' ) cond = threading . Condition () seeker = Seeker ( cond , 'seeker' ) hider = Hider ( cond , 'hider' ) seeker . start () hider . start () \u8f93\u51fa\uff1a hider: \u6211\u5df2\u7ecf\u628a\u773c\u775b\u8499\u4e0a\u4e86 seeker: \u6211\u5df2\u7ecf\u85cf\u597d\u4e86\uff0c\u4f60\u5feb\u6765\u627e\u6211\u5427 hider: \u6211\u627e\u5230\u4f60\u4e86 ~_~ hider: \u6211\u8d62\u4e86 seeker: \u88ab\u4f60\u627e\u5230\u4e86\uff0c\u54ce~~~ 3. Queue \u00b6 \u4ece\u4e00\u4e2a\u7ebf\u7a0b\u5411\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53d1\u9001\u6570\u636e\u7684\u6700\u5b89\u5168\u7684\u65b9\u5f0f\u53ef\u80fd\u5c31\u662f\u4f7f\u7528queue\u5e93\u4e2d\u7684\u961f\u5217\u4e86\uff0c\u521b\u5efa\u4e00\u4e2a\u88ab\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u7684 Queue \u5bf9\u8c61\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u4f7f\u7528 put() \u548c get() \u64cd\u4f5c\u6765\u5411\u961f\u5217\u4e2d\u53d1\u9001\u548c\u83b7\u53d6\u6570\u636e\u3002 from queue import Queue # maxsize\u9ed8\u8ba4\u4e3a0\uff0c\u4e0d\u53d7\u9650 # \u4e00\u65e6>0\uff0c\u800c\u6d88\u606f\u6570\u53c8\u8fbe\u5230\u9650\u5236\uff0cq.put()\u4e5f\u5c06\u963b\u585e q = Queue ( maxsize = 0 ) # \u9ed8\u8ba4\u963b\u585e\u7a0b\u5e8f\uff0c\u7b49\u5f85\u961f\u5217\u6d88\u606f\uff0c\u53ef\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4 q . get ( block = True , timeout = None ) # \u53d1\u9001\u6d88\u606f\uff1a\u9ed8\u8ba4\u4f1a\u963b\u585e\u7a0b\u5e8f\u81f3\u961f\u5217\u4e2d\u6709\u7a7a\u95f2\u4f4d\u7f6e\u653e\u5165\u6570\u636e q . put ( item , block = True , timeout = None ) # \u7b49\u5f85\u6240\u6709\u7684\u6d88\u606f\u90fd\u88ab\u6d88\u8d39\u5b8c q . join () # \u901a\u77e5\u961f\u5217\u4efb\u52a1\u5904\u7406\u5df2\u7ecf\u5b8c\u6210\uff0c\u5f53\u6240\u6709\u4efb\u52a1\u90fd\u5904\u7406\u5b8c\u6210\u65f6\uff0cjoin() \u963b\u585e\u5c06\u4f1a\u89e3\u9664 q . task_done ()","title":"\u591a\u7ebf\u7a0b"},{"location":"Python%E5%A4%9A%E7%BA%BF%E7%A8%8B/#_1","text":"Python\u521b\u5efa\u591a\u7ebf\u7a0b\u7684\u65b9\u6cd5\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0\u3002","title":"\u591a\u7ebf\u7a0b"},{"location":"Python%E5%A4%9A%E7%BA%BF%E7%A8%8B/#1","text":"\u8981\u5b9e\u73b0\u5bf9\u591a\u4e2a\u7ebf\u7a0b\u8fdb\u884c\u63a7\u5236\uff0c\u5176\u5b9e\u672c\u8d28\u4e0a\u5c31\u662f\u6d88\u606f\u673a\u5236\uff0c\u5229\u7528\u6d88\u606f\u673a\u5236\u53d1\u9001\u6307\u4ee4\u6765\u63a7\u5236\u7ebf\u7a0b\u3002 \u7ebf\u7a0b\u901a\u4fe1\u65b9\u6cd5 \u4e8b\u4ef6\uff1a threading.Event \u6761\u4ef6\uff1a threading.Condition \u961f\u5217\uff1a queue.Queue","title":"1. \u7ebf\u7a0b\u901a\u4fe1\u673a\u5236"},{"location":"Python%E5%A4%9A%E7%BA%BF%E7%A8%8B/#2-event","text":"Python \u63d0\u4f9b\u4e86\u975e\u5e38\u7b80\u5355\u7684\u901a\u4fe1\u673a\u5236 Threading.Event \uff0c\u901a\u7528\u6761\u4ef6\u53d8\u91cf\uff0c\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u901a\u8fc7\u7b49\u5f85\u67d0\u4e2a\u4e8b\u4ef6\u7684\u53d1\u751f\uff0c\u5728\u4e8b\u4ef6\u53d1\u751f\u4e4b\u540e\uff0c\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u4f1a\u88ab\u6fc0\u6d3b\u3002 event = threading . Event () # \u91cd\u7f6eevent\uff0c\u4f7f\u5f97\u8be5event\u5904\u4e8e\u5f85\u547d\u72b6\u6001 event . clear () # \u7b49\u5f85\u63a5\u6536event\u7684\u6307\u4ee4\uff0c\u51b3\u5b9a\u662f\u5426\u963b\u585e\u7a0b\u5e8f\u7684\u6267\u884c event . wait () # \u53d1\u9001event\u6307\u4ee4\uff0c\u4f7f\u6240\u6709\u8bbe\u7f6e\u8be5event\u4e8b\u4ef6\u7684\u7ebf\u7a0b\u6267\u884c event . set () \u793a\u4f8b\uff1a import time import threading class MyThread ( threading . Thread ): def __init__ ( self , name , event ): super () . __init__ () self . name = name self . event = event def run ( self ): print ( \"Thread: {0} start at {1} \" . format ( self . name , time . ctime ( time . time ()))) self . event . wait () print ( \"Thread: {0} finished at {1} \" . format ( self . name , time . ctime ( time . time ()))) event = threading . Event () threads = [ MyThread ( str ( i ), event ) for i in range ( 1 , 5 )] event . clear () for item in threads : item . start () print ( '\u7b49\u5f855s...' ) time . sleep ( 5 ) print ( '\u5524\u9192\u6240\u6709\u7ebf\u7a0b...' ) event . start () \u8f93\u51fa\uff1a Thread: 1 start at Sun May 13 20:38:08 2018 Thread: 2 start at Sun May 13 20:38:08 2018 Thread: 3 start at Sun May 13 20:38:08 2018 Thread: 4 start at Sun May 13 20:38:08 2018 \u7b49\u5f855s... \u5524\u9192\u6240\u6709\u7ebf\u7a0b... Thread: 1 finish at Sun May 13 20:38:13 2018 Thread: 4 finish at Sun May 13 20:38:13 2018 Thread: 2 finish at Sun May 13 20:38:13 2018 Thread: 3 finish at Sun May 13 20:38:13 2018 \u53ef\u89c1\u5728\u6240\u6709\u7ebf\u7a0b\u542f\u52a8\u540e\uff0c\u7ebf\u7a0b\u5e76\u4e0d\u4f1a\u6267\u884c\u5b8c\u6210\uff0c\u800c\u662f\u5728 self.event.wait() \u5904\u505c\u6b62\u4e86\uff0c\u9700\u8981\u6211\u4eec\u901a\u8fc7 event.set() \u6765\u7ed9\u6240\u6709\u7ebf\u7a0b\u53d1\u9001\u6307\u4ee4\u624d\u80fd\u7ee7\u7eed\u6267\u884c\u3002","title":"2. Event \u4e8b\u4ef6"},{"location":"Python%E5%A4%9A%E7%BA%BF%E7%A8%8B/#3-condition","text":"Condition\u548cEvent \u662f\u7c7b\u4f3c\u7684\uff0c\u5e76\u6ca1\u6709\u591a\u5927\u533a\u522b\u3002 cond = threading . Condition () # \u7c7b\u4f3clock.acquire() cond . acquire () # \u7c7b\u4f3clock.release() cond . release () # \u7b49\u5f85\u6307\u5b9a\u89e6\u53d1\uff0c\u540c\u65f6\u4f1a\u91ca\u653e\u5bf9\u9501\u7684\u83b7\u53d6,\u76f4\u5230\u88abnotify\u624d\u91cd\u65b0\u5360\u6709\u7410\u3002 cond . wait () # \u53d1\u9001\u6307\u5b9a\uff0c\u89e6\u53d1\u6267\u884c cond . notify () \u793a\u4f8b\uff1a import threading , time class Hider ( threading . Thread ): def __init__ ( self , cond , name ): super ( Hider , self ) . __init__ () self . cond = cond self . name = name def run ( self ): time . sleep ( 1 ) #\u786e\u4fdd\u5148\u8fd0\u884cSeeker\u4e2d\u7684\u65b9\u6cd5 self . cond . acquire () print ( self . name + ': \u6211\u5df2\u7ecf\u628a\u773c\u775b\u8499\u4e0a\u4e86' ) self . cond . notify () self . cond . wait () print ( self . name + ': \u6211\u627e\u5230\u4f60\u4e86\u54e6 ~_~' ) self . cond . notify () self . cond . release () print ( self . name + ': \u6211\u8d62\u4e86' ) class Seeker ( threading . Thread ): def __init__ ( self , cond , name ): super ( Seeker , self ) . __init__ () self . cond = cond self . name = name def run ( self ): self . cond . acquire () self . cond . wait () print ( self . name + ': \u6211\u5df2\u7ecf\u85cf\u597d\u4e86\uff0c\u4f60\u5feb\u6765\u627e\u6211\u5427' ) self . cond . notify () self . cond . wait () self . cond . release () print ( self . name + ': \u88ab\u4f60\u627e\u5230\u4e86\uff0c\u54ce~~~' ) cond = threading . Condition () seeker = Seeker ( cond , 'seeker' ) hider = Hider ( cond , 'hider' ) seeker . start () hider . start () \u8f93\u51fa\uff1a hider: \u6211\u5df2\u7ecf\u628a\u773c\u775b\u8499\u4e0a\u4e86 seeker: \u6211\u5df2\u7ecf\u85cf\u597d\u4e86\uff0c\u4f60\u5feb\u6765\u627e\u6211\u5427 hider: \u6211\u627e\u5230\u4f60\u4e86 ~_~ hider: \u6211\u8d62\u4e86 seeker: \u88ab\u4f60\u627e\u5230\u4e86\uff0c\u54ce~~~","title":"3. Condition"},{"location":"Python%E5%A4%9A%E7%BA%BF%E7%A8%8B/#3-queue","text":"\u4ece\u4e00\u4e2a\u7ebf\u7a0b\u5411\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53d1\u9001\u6570\u636e\u7684\u6700\u5b89\u5168\u7684\u65b9\u5f0f\u53ef\u80fd\u5c31\u662f\u4f7f\u7528queue\u5e93\u4e2d\u7684\u961f\u5217\u4e86\uff0c\u521b\u5efa\u4e00\u4e2a\u88ab\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u7684 Queue \u5bf9\u8c61\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u4f7f\u7528 put() \u548c get() \u64cd\u4f5c\u6765\u5411\u961f\u5217\u4e2d\u53d1\u9001\u548c\u83b7\u53d6\u6570\u636e\u3002 from queue import Queue # maxsize\u9ed8\u8ba4\u4e3a0\uff0c\u4e0d\u53d7\u9650 # \u4e00\u65e6>0\uff0c\u800c\u6d88\u606f\u6570\u53c8\u8fbe\u5230\u9650\u5236\uff0cq.put()\u4e5f\u5c06\u963b\u585e q = Queue ( maxsize = 0 ) # \u9ed8\u8ba4\u963b\u585e\u7a0b\u5e8f\uff0c\u7b49\u5f85\u961f\u5217\u6d88\u606f\uff0c\u53ef\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4 q . get ( block = True , timeout = None ) # \u53d1\u9001\u6d88\u606f\uff1a\u9ed8\u8ba4\u4f1a\u963b\u585e\u7a0b\u5e8f\u81f3\u961f\u5217\u4e2d\u6709\u7a7a\u95f2\u4f4d\u7f6e\u653e\u5165\u6570\u636e q . put ( item , block = True , timeout = None ) # \u7b49\u5f85\u6240\u6709\u7684\u6d88\u606f\u90fd\u88ab\u6d88\u8d39\u5b8c q . join () # \u901a\u77e5\u961f\u5217\u4efb\u52a1\u5904\u7406\u5df2\u7ecf\u5b8c\u6210\uff0c\u5f53\u6240\u6709\u4efb\u52a1\u90fd\u5904\u7406\u5b8c\u6210\u65f6\uff0cjoin() \u963b\u585e\u5c06\u4f1a\u89e3\u9664 q . task_done ()","title":"3. Queue"},{"location":"Python%E5%A4%9A%E8%BF%9B%E7%A8%8B/","text":"","title":"Python\u591a\u8fdb\u7a0b"},{"location":"Python%E9%94%81%E6%9C%BA%E5%88%B6/","text":"\u7ebf\u7a0b\u4e2d\u7684\u9501\u673a\u5236 \u00b6 \u5f53\u5bf9\u4e00\u6bb5\u4ee3\u7801\u52a0\u9501\u65f6\uff0c\u610f\u5473\u7740\u5728\u540c\u4e00\u65f6\u95f4\u5185\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u8fd9\u6bb5\u4ee3\u7801\u3002 Python\u4e2d\u7684\u9501\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\uff1a \u4e92\u65a5\u9501 \u53ef\u91cd\u5165\u9501 1.1 \u4e92\u65a5\u9501\uff08Lock\uff09 \u00b6 import threading # \u521b\u5efa\u5168\u5c40\u9501\u5bf9\u8c61 lock = threading . Lock () # \u83b7\u53d6\u9501\uff0c\u672a\u83b7\u53d6\u5230\u9501\u7684\u8bdd\u4f1a\u963b\u585e\u7a0b\u5e8f\uff0c\u76f4\u5230\u83b7\u53d6\u5230\u9501 lock . acquire () # \u91ca\u653e\u9501 lock . release () \ud83d\ude02 lock.acquire() \u548c lock.release() \u5fc5\u987b\u6210\u5bf9\u4f7f\u7528\uff0c\u4e0d\u7136\u4f1a\u9020\u6210\u6b7b\u9501\u3002 \u6700\u4f73\u4f7f\u7528\u65b9\u5f0f\u662f\u4f7f\u7528 with \u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff1a lock = threading . Lock () with lock : # code block pass 1.2 \u53ef\u91cd\u5165\u9501\uff08RLock\uff09 \u00b6 \u6709\u65f6\u5728\u540c\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u591a\u6b21\u8bf7\u6c42\u540c\u4e00\u4e2a\u8d44\u6e90\uff0c\u79f0\u4e3a**\u5d4c\u5957\u9501**\u3002 \u5982\u679c\u76f4\u63a5\u4f7f\u7528\u4e92\u65a5\u9501\uff0c\u4ee3\u7801\u5982\u4e0b\uff0c\u4f1a\u9020\u6210\u6b7b\u9501\uff1a import threading def main (): num = 0 lock = threading . Lock () with lock : for i in range ( 10 ): num += 1 with lock : print ( num ) t = threading . Thread ( target = main ) t . start () \u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u76f4\u63a5\u9020\u6210\u6b7b\u9501\uff0c\u56e0\u4e3a\u7b2c\u4e8c\u6b21\u83b7\u53d6\u9501\u7684\u65f6\u5019\uff0c\u7b2c\u4e00\u6b21\u83b7\u53d6\u7684\u9501\u5e76\u6ca1\u6709\u91ca\u653e\uff0c\u6240\u4ee5\u4f1a\u4e00\u76f4\u5728 lock.acquire() \u5904\u963b\u585e\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u9700\u8981\u4f7f\u7528\u91cd\u5165\u9501\uff08RLock\uff09\u6765\u4e13\u95e8\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff1a import threding def main (): num = 0 rlock = threading . RLock () with rlock : for i in range ( 10 ): num += 1 with rlock : print ( num ) t = threading . Thread ( target = main ) t . start () \u53ef\u91cd\u5165\u9501\u53ea\u6709\u5728\u540c\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u624d\u53ef\u4ee5\u91cd\u590d\u83b7\u53d6\u9501\uff0c\u5176\u4ed6\u548c\u4e92\u65a5\u9501\u65e0\u5f02\u3002","title":"\u7ebf\u7a0b\u4e2d\u7684\u9501\u673a\u5236"},{"location":"Python%E9%94%81%E6%9C%BA%E5%88%B6/#_1","text":"\u5f53\u5bf9\u4e00\u6bb5\u4ee3\u7801\u52a0\u9501\u65f6\uff0c\u610f\u5473\u7740\u5728\u540c\u4e00\u65f6\u95f4\u5185\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u8fd9\u6bb5\u4ee3\u7801\u3002 Python\u4e2d\u7684\u9501\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\uff1a \u4e92\u65a5\u9501 \u53ef\u91cd\u5165\u9501","title":"\u7ebf\u7a0b\u4e2d\u7684\u9501\u673a\u5236"},{"location":"Python%E9%94%81%E6%9C%BA%E5%88%B6/#11-lock","text":"import threading # \u521b\u5efa\u5168\u5c40\u9501\u5bf9\u8c61 lock = threading . Lock () # \u83b7\u53d6\u9501\uff0c\u672a\u83b7\u53d6\u5230\u9501\u7684\u8bdd\u4f1a\u963b\u585e\u7a0b\u5e8f\uff0c\u76f4\u5230\u83b7\u53d6\u5230\u9501 lock . acquire () # \u91ca\u653e\u9501 lock . release () \ud83d\ude02 lock.acquire() \u548c lock.release() \u5fc5\u987b\u6210\u5bf9\u4f7f\u7528\uff0c\u4e0d\u7136\u4f1a\u9020\u6210\u6b7b\u9501\u3002 \u6700\u4f73\u4f7f\u7528\u65b9\u5f0f\u662f\u4f7f\u7528 with \u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff1a lock = threading . Lock () with lock : # code block pass","title":"1.1 \u4e92\u65a5\u9501\uff08Lock\uff09"},{"location":"Python%E9%94%81%E6%9C%BA%E5%88%B6/#12-rlock","text":"\u6709\u65f6\u5728\u540c\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u591a\u6b21\u8bf7\u6c42\u540c\u4e00\u4e2a\u8d44\u6e90\uff0c\u79f0\u4e3a**\u5d4c\u5957\u9501**\u3002 \u5982\u679c\u76f4\u63a5\u4f7f\u7528\u4e92\u65a5\u9501\uff0c\u4ee3\u7801\u5982\u4e0b\uff0c\u4f1a\u9020\u6210\u6b7b\u9501\uff1a import threading def main (): num = 0 lock = threading . Lock () with lock : for i in range ( 10 ): num += 1 with lock : print ( num ) t = threading . Thread ( target = main ) t . start () \u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u76f4\u63a5\u9020\u6210\u6b7b\u9501\uff0c\u56e0\u4e3a\u7b2c\u4e8c\u6b21\u83b7\u53d6\u9501\u7684\u65f6\u5019\uff0c\u7b2c\u4e00\u6b21\u83b7\u53d6\u7684\u9501\u5e76\u6ca1\u6709\u91ca\u653e\uff0c\u6240\u4ee5\u4f1a\u4e00\u76f4\u5728 lock.acquire() \u5904\u963b\u585e\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u9700\u8981\u4f7f\u7528\u91cd\u5165\u9501\uff08RLock\uff09\u6765\u4e13\u95e8\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff1a import threding def main (): num = 0 rlock = threading . RLock () with rlock : for i in range ( 10 ): num += 1 with rlock : print ( num ) t = threading . Thread ( target = main ) t . start () \u53ef\u91cd\u5165\u9501\u53ea\u6709\u5728\u540c\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u624d\u53ef\u4ee5\u91cd\u590d\u83b7\u53d6\u9501\uff0c\u5176\u4ed6\u548c\u4e92\u65a5\u9501\u65e0\u5f02\u3002","title":"1.2 \u53ef\u91cd\u5165\u9501\uff08RLock\uff09"},{"location":"WSL2%E5%AE%89%E8%A3%85docker/","text":"WSL2 \u5b89\u88c5 docker \u7684\u4e24\u79cd\u65b9\u5f0f \u00b6 1. \u524d\u8a00 \u00b6 Windows10 \u5df2\u7ecf\u63a8\u51fa\u4e86 WSL2 \uff0c\u76f8\u6bd4\u4e8e WSL \u91c7\u7528\u7684 API \u8f6c\u6362\u7684\u65b9\u5f0f\uff0c WSL2 \u5219\u5b8c\u5168\u4e0d\u540c\uff0cWindows10 \u5f00\u59cb\u5185\u7f6e\u4e86\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u865a\u62df\u673a\uff0c\u8bb0\u8fc7\u4e3a\u8f6f\u4ef6\u7684\u4e0d\u65ad\u4f18\u5316\uff0c\u8fd9\u4e2a\u865a\u62df\u673a\u5df2\u7ecf\u548c Windows10 \u9ad8\u5ea6\u96c6\u6210\uff0c\u5b9e\u73b0\u4e86\u865a\u62df\u673a\u7684\u9ad8\u6027\u80fd\u8fd0\u884c\uff0c WSL2 \u4fbf\u662f\u8fd0\u884c\u5728\u865a\u62df\u673a\u4e0a\u7684\u4e00\u4e2a\u5b8c\u6574\u7684 Linux \u5185\u6838\uff0c\u56e0\u6b64 WSL2 \u7684\u4f7f\u7528\u4f53\u9a8c\u66f4\u52a0\u8d34\u8fd1\u539f\u751f Linux\uff0c\u540c\u65f6 WSL2 \u5f00\u542f\u901f\u5ea6\u6709\u4e86\u660e\u663e\u7684\u63d0\u5347\u3002 2. \u5f00\u542f WSL2 \u00b6 \ud83e\udd2a \u81ea\u884c\u767e\u5ea6... // \u67e5\u770bwsl\u7248\u672c wsl -l -v 3. \u5b89\u88c5docker\u7684\u4e24\u79cd\u65b9\u5f0f \u00b6 3.1 \u539f\u751fLinux\u5b89\u88c5docker \u00b6 WSL2 \u5df2\u7ecf\u5b8c\u6574\u4f7f\u7528\u4e86 Linux \u5185\u6838\uff0c\u8be5\u79cd\u5b89\u88c5\u65b9\u5f0f\u548c\u5728 Linux \u865a\u62df\u673a\u4e0a\u5b89\u88c5 docker \u76f8\u4f3c\uff0c\u6b65\u9aa4\u5982\u4e0b\uff1a curl -fsSL https://get.docker.com -o get-docker.sh sudo sh get-docker.sh sudo service docker start \u6267\u884c\u4e0a\u9762\u7684\u811a\u672c\u7684\u8fc7\u7a0b\u4e2d\uff0c\uff0c\u811a\u672c\u63d0\u793a \u201c\u5efa\u8bae\u4f7f\u7528Docker Desktop for windows\u201d \uff0c20s\u5185\u6309 Ctrl+C \u4f1a\u9000\u51fa\u5b89\u88c5\uff0c\u6240\u4ee5\u9700\u8981\u7b49\u5f85 20s\uff0c\u53e6\u5916\u6b64\u79cd\u65b9\u5f0f\u9700\u8981\u8bbf\u95ee\u5916\u7f51\u3002 \u68c0\u67e5 docker \u662f\u5426\u6b63\u5e38\u5b89\u88c5\uff1a # \u68c0\u67e5 docker \u8fdb\u7a0b\u662f\u5426\u542f\u52a8 service docker status ps aux | grep docker # \u68c0\u67e5\u62c9\u53d6\u955c\u50cf\u529f\u80fd\u662f\u5426\u6b63\u5e38 docker pull busybox docker images \ud83d\udca9 \u6ce8\u610f\uff1a \u4e0d\u540c\u4e8e\u5b8c\u5168 Linux \u865a\u62df\u673a\u65b9\u5f0f\uff0c WLS2 \u4e0b\u901a\u8fc7 apt install docker-ce \u547d\u4ee4\u5b89\u88c5\u7684 docker \u65e0\u6cd5\u542f\u52a8\uff0c\u56e0\u4e3a WSL2 \u65b9\u5f0f\u7684 ubuntu \u91cc\u9762\u6ca1\u6709 systemd \u3002\u4e0a\u8ff0\u5b98\u65b9 get-docker.sh \u5b89\u88c5\u7684 docker\uff0c dockerd \u8fdb\u7a0b\u662f\u7528 ubuntu \u4f20\u7edf\u7684 init \u65b9\u5f0f\u800c\u975e systemd \u542f\u52a8\u7684\u3002 3.2 Dcoker Desktop for Windows \u7684\u65b9\u5f0f \u00b6 Docker \u4e5f\u4e13\u95e8\u5f00\u53d1\u4e86\u53ef\u4ee5\u4f7f\u7528 WSL2 \u4e2d\u7684 Docker \u5b88\u62a4\u8fdb\u7a0b\u7684\u684c\u9762\u7ba1\u7406\u7a0b\u5e8f, \u6253\u5f00 Docker Desktop WSL2 backend \u9875\u9762\uff0c\u4e0b\u8f7d\u6700\u65b0\u7684 Docker Desktop for Windows \u7a0b\u5e8f \uff0c\u5efa\u8bae\u4e0b\u8f7dstable \u7248\u672c\u3002\u4e0b\u8f7d\u5730\u5740\uff1a https://www.docker.com/products/docker-desktop 4. \u603b\u7ed3 \u00b6 WSL2 \u4e0b\u539f\u751f Linux \u5b89\u88c5 docker \u65b9\u5f0f\u548c\u5b8c\u5168 Linux \u865a\u62df\u673a\u5b89\u88c5 docker \u7c7b\u4f3c\uff0c\u533a\u522b\u5728\u4e8e WSL2 \u4e0b\u7684 Linux \u4e0d\u652f\u6301 systemd (\u5783\u573e\u5fae\u8f6f\uff0c\u5c0f\u58f0BB)\u3002 Docker Desktop for windows \u65b9\u5f0f\uff0c\u5176\u5b9e\u8d28\u662f\u5229\u7528 docker \u7684 C/S \u67b6\u6784\uff0c\u5c06 Windows \u6a21\u5f0f\u4e0b\u7684 docker \u5bf9\u5e94 docker.sock \uff0cdocker \u5ba2\u6237\u7aef\u4e8c\u8fdb\u5236\u548c docker \u7684\u6570\u636e\u76ee\u5f55\u6302\u8f7d\u5230 WSL2 \u91cc\u9762\u7684 Linux \u673a\u5668\uff0c\u5728\u6b64 Linux \u673a\u5668\u4e0b\u6267\u884c docker \u547d\u4ee4(docker \u547d\u4ee4\u4e3a docker \u5ba2\u6237\u7aef)\uff0c\u5b9e\u8d28\u4e3a\u5ba2\u6237\u7aef\u901a\u8fc7\u6302\u8f7d\u7684 /var/run/docker.sock \u6587\u4ef6\u4e0e Windows \u91cc\u9762\u7684 dockerd \u670d\u52a1\u7aef\u8fdb\u7a0b\u901a\u4fe1\u3002","title":"WSL2 \u5b89\u88c5 docker \u7684\u4e24\u79cd\u65b9\u5f0f"},{"location":"WSL2%E5%AE%89%E8%A3%85docker/#wsl2-docker","text":"","title":"WSL2 \u5b89\u88c5 docker \u7684\u4e24\u79cd\u65b9\u5f0f"},{"location":"WSL2%E5%AE%89%E8%A3%85docker/#1","text":"Windows10 \u5df2\u7ecf\u63a8\u51fa\u4e86 WSL2 \uff0c\u76f8\u6bd4\u4e8e WSL \u91c7\u7528\u7684 API \u8f6c\u6362\u7684\u65b9\u5f0f\uff0c WSL2 \u5219\u5b8c\u5168\u4e0d\u540c\uff0cWindows10 \u5f00\u59cb\u5185\u7f6e\u4e86\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u865a\u62df\u673a\uff0c\u8bb0\u8fc7\u4e3a\u8f6f\u4ef6\u7684\u4e0d\u65ad\u4f18\u5316\uff0c\u8fd9\u4e2a\u865a\u62df\u673a\u5df2\u7ecf\u548c Windows10 \u9ad8\u5ea6\u96c6\u6210\uff0c\u5b9e\u73b0\u4e86\u865a\u62df\u673a\u7684\u9ad8\u6027\u80fd\u8fd0\u884c\uff0c WSL2 \u4fbf\u662f\u8fd0\u884c\u5728\u865a\u62df\u673a\u4e0a\u7684\u4e00\u4e2a\u5b8c\u6574\u7684 Linux \u5185\u6838\uff0c\u56e0\u6b64 WSL2 \u7684\u4f7f\u7528\u4f53\u9a8c\u66f4\u52a0\u8d34\u8fd1\u539f\u751f Linux\uff0c\u540c\u65f6 WSL2 \u5f00\u542f\u901f\u5ea6\u6709\u4e86\u660e\u663e\u7684\u63d0\u5347\u3002","title":"1. \u524d\u8a00"},{"location":"WSL2%E5%AE%89%E8%A3%85docker/#2-wsl2","text":"\ud83e\udd2a \u81ea\u884c\u767e\u5ea6... // \u67e5\u770bwsl\u7248\u672c wsl -l -v","title":"2. \u5f00\u542f WSL2"},{"location":"WSL2%E5%AE%89%E8%A3%85docker/#3-docker","text":"","title":"3. \u5b89\u88c5docker\u7684\u4e24\u79cd\u65b9\u5f0f"},{"location":"WSL2%E5%AE%89%E8%A3%85docker/#31-linuxdocker","text":"WSL2 \u5df2\u7ecf\u5b8c\u6574\u4f7f\u7528\u4e86 Linux \u5185\u6838\uff0c\u8be5\u79cd\u5b89\u88c5\u65b9\u5f0f\u548c\u5728 Linux \u865a\u62df\u673a\u4e0a\u5b89\u88c5 docker \u76f8\u4f3c\uff0c\u6b65\u9aa4\u5982\u4e0b\uff1a curl -fsSL https://get.docker.com -o get-docker.sh sudo sh get-docker.sh sudo service docker start \u6267\u884c\u4e0a\u9762\u7684\u811a\u672c\u7684\u8fc7\u7a0b\u4e2d\uff0c\uff0c\u811a\u672c\u63d0\u793a \u201c\u5efa\u8bae\u4f7f\u7528Docker Desktop for windows\u201d \uff0c20s\u5185\u6309 Ctrl+C \u4f1a\u9000\u51fa\u5b89\u88c5\uff0c\u6240\u4ee5\u9700\u8981\u7b49\u5f85 20s\uff0c\u53e6\u5916\u6b64\u79cd\u65b9\u5f0f\u9700\u8981\u8bbf\u95ee\u5916\u7f51\u3002 \u68c0\u67e5 docker \u662f\u5426\u6b63\u5e38\u5b89\u88c5\uff1a # \u68c0\u67e5 docker \u8fdb\u7a0b\u662f\u5426\u542f\u52a8 service docker status ps aux | grep docker # \u68c0\u67e5\u62c9\u53d6\u955c\u50cf\u529f\u80fd\u662f\u5426\u6b63\u5e38 docker pull busybox docker images \ud83d\udca9 \u6ce8\u610f\uff1a \u4e0d\u540c\u4e8e\u5b8c\u5168 Linux \u865a\u62df\u673a\u65b9\u5f0f\uff0c WLS2 \u4e0b\u901a\u8fc7 apt install docker-ce \u547d\u4ee4\u5b89\u88c5\u7684 docker \u65e0\u6cd5\u542f\u52a8\uff0c\u56e0\u4e3a WSL2 \u65b9\u5f0f\u7684 ubuntu \u91cc\u9762\u6ca1\u6709 systemd \u3002\u4e0a\u8ff0\u5b98\u65b9 get-docker.sh \u5b89\u88c5\u7684 docker\uff0c dockerd \u8fdb\u7a0b\u662f\u7528 ubuntu \u4f20\u7edf\u7684 init \u65b9\u5f0f\u800c\u975e systemd \u542f\u52a8\u7684\u3002","title":"3.1 \u539f\u751fLinux\u5b89\u88c5docker"},{"location":"WSL2%E5%AE%89%E8%A3%85docker/#32-dcoker-desktop-for-windows","text":"Docker \u4e5f\u4e13\u95e8\u5f00\u53d1\u4e86\u53ef\u4ee5\u4f7f\u7528 WSL2 \u4e2d\u7684 Docker \u5b88\u62a4\u8fdb\u7a0b\u7684\u684c\u9762\u7ba1\u7406\u7a0b\u5e8f, \u6253\u5f00 Docker Desktop WSL2 backend \u9875\u9762\uff0c\u4e0b\u8f7d\u6700\u65b0\u7684 Docker Desktop for Windows \u7a0b\u5e8f \uff0c\u5efa\u8bae\u4e0b\u8f7dstable \u7248\u672c\u3002\u4e0b\u8f7d\u5730\u5740\uff1a https://www.docker.com/products/docker-desktop","title":"3.2 Dcoker Desktop for Windows \u7684\u65b9\u5f0f"},{"location":"WSL2%E5%AE%89%E8%A3%85docker/#4","text":"WSL2 \u4e0b\u539f\u751f Linux \u5b89\u88c5 docker \u65b9\u5f0f\u548c\u5b8c\u5168 Linux \u865a\u62df\u673a\u5b89\u88c5 docker \u7c7b\u4f3c\uff0c\u533a\u522b\u5728\u4e8e WSL2 \u4e0b\u7684 Linux \u4e0d\u652f\u6301 systemd (\u5783\u573e\u5fae\u8f6f\uff0c\u5c0f\u58f0BB)\u3002 Docker Desktop for windows \u65b9\u5f0f\uff0c\u5176\u5b9e\u8d28\u662f\u5229\u7528 docker \u7684 C/S \u67b6\u6784\uff0c\u5c06 Windows \u6a21\u5f0f\u4e0b\u7684 docker \u5bf9\u5e94 docker.sock \uff0cdocker \u5ba2\u6237\u7aef\u4e8c\u8fdb\u5236\u548c docker \u7684\u6570\u636e\u76ee\u5f55\u6302\u8f7d\u5230 WSL2 \u91cc\u9762\u7684 Linux \u673a\u5668\uff0c\u5728\u6b64 Linux \u673a\u5668\u4e0b\u6267\u884c docker \u547d\u4ee4(docker \u547d\u4ee4\u4e3a docker \u5ba2\u6237\u7aef)\uff0c\u5b9e\u8d28\u4e3a\u5ba2\u6237\u7aef\u901a\u8fc7\u6302\u8f7d\u7684 /var/run/docker.sock \u6587\u4ef6\u4e0e Windows \u91cc\u9762\u7684 dockerd \u670d\u52a1\u7aef\u8fdb\u7a0b\u901a\u4fe1\u3002","title":"4. \u603b\u7ed3"},{"location":"WSL2%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB/","text":"WSL2\u6570\u636e\u8fc1\u79fb \u00b6 WSL ( Windows Subsystem Linux ) Windows Linux \u5b50\u7cfb\u7edf\u662f Win10 \u65b0\u589e\u7684\u4e00\u4e2a\u529f\u80fd\uff0c\u4f7f\u7528 WSL \u53ef\u4ee5\u76f4\u63a5\u5728 Windows \u4e0a\u9762\u4f7f\u7528\u548c\u8fd0\u884c Linux \u7a0b\u5e8f\u548c\u547d\u4ee4\u3002\u800c WSL2 \u662f WSL \u7684\u4e00\u4e2a\u65b0\u7684\u7248\u672c\uff0c\u81ea Windows10 2004 \u7248\u672c\u53d1\u5e03\u4e4b\u540e\uff0cWSL2 \u53ef\u4ee5\u76f4\u63a5\u5728 Windows10 \u4e2d\u76f4\u63a5\u4f7f\u7528\uff0c\u76f8\u6bd4\u4e8e WSL\uff0cWSL2 \u4f7f\u7528\u4e86 HyperV \u6280\u672f\uff0c\u89e3\u51b3\u4e86 WSL \u4e0d\u80fd\u4f7f\u7528 docker \u7684\u95ee\u9898\uff0c\u6027\u80fd\u4e5f\u5f97\u5230\u4e86\u8fdb\u4e00\u6b65\u7684\u63d0\u5347\uff0cWSL2 \u4e5f\u53ef\u4ee5\u8bf4\u662f\u4f7f\u7528\u771f\u6b63\u7684\u3001\u66f4\u52a0\u5b8c\u6574\u7684 Linux \u5185\u6838\u3002 \u56de\u5230\u6b63\u9898\uff0c\u5f00\u542f\u548c\u5b89\u88c5 WSL2 \u9ed8\u8ba4\u662f\u5b89\u88c5\u5728 C \u76d8\u4e2d\uff0c\u968f\u7740\u8f6f\u4ef6\u7684\u5b89\u88c5\u548c\u5b9e\u9645\u9879\u76ee\u7684\u5f00\u53d1\uff0c\u5f88\u5feb\u5c31\u80fd\u4f7f C \u76d8\u5b58\u50a8\u7a7a\u95f4\u544a\u6025\uff0c\u6240\u4ee5\u4e00\u4e2a\u89e3\u51b3\u529e\u6cd5\u5c31\u662f\u5c06 WSL2 \u6570\u636e\u8fdb\u884c\u8fc1\u79fb\uff0c\u5c06 WSL2 \u5b89\u88c5\u5728 C \u76d8\u4e4b\u5916\u7684\u5927\u5bb9\u91cf\u5b58\u50a8\u4f4d\u7f6e\u3002\u5f53\u7136 C \u76d8\u8db3\u591f\u5927\u7684\u8bdd\uff0c\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u6570\u636e\u8fc1\u79fb\u5de5\u4f5c\u3002 \u8f6f\u94fe\u63a5\u7684\u65b9\u5f0f \u00b6 \u901a\u8fc7\u8f6f\u94fe\u63a5\u7684\u65b9\u5f0f\u4fee\u6539 VHDX \u6587\u4ef6\u7684\u5b58\u653e\u78c1\u76d8\uff0c\u8fbe\u5230\u7f13\u89e3 C \u76d8\u5b58\u50a8\u538b\u529b\u7684\u95ee\u9898\u3002 \u5b9e\u73b0\u65b9\u5f0f\uff1a $newLocation = \"E:\\WSL\\Ubuntu-WSL2\\\" cd ~\\AppData\\Local\\Packages\\CanonicalGroupLimited.Ubuntu20.04onWindows_79rhkp1fndgsc\\LocalState wsl --shutdown Optimize-VHD .\\ext4.vhdx -Mode Full mkdir $newLocation -Force mv ext4.vhdx $newLocation cd .. rm LocalState New-Item -ItemType SymbolicLink -Path \" LocalState \" -Target $newLocation \u6587\u4ef6\u5bfc\u51fa\u65b9\u5f0f \u00b6 \u9996\u5148\u5148\u5173\u95ed WSL wsl --shutdown \u67e5\u770b\u7cfb\u7edf\u4fe1\u606f\uff1a wsl -l -v \u5bfc\u51fa\u7cfb\u7edf\u6587\u4ef6\uff1a wsl --export <DistroName> <PathToTarArchive> \u5220\u9664\u7cfb\u7edf\uff1a wsl --unregister <DistroName> \u4ece\u6307\u5b9a\u4f4d\u7f6e\u5bfc\u5165\u65b0\u7684\u7cfb\u7edf\uff1a wsl --import <DistronName> <PathToTarArchive> \u8bbe\u7f6e\u9ed8\u8ba4\u7528\u6237\uff1a ubuntu2004.exe config --default-user xxx","title":"WSL2\u6570\u636e\u8fc1\u79fb"},{"location":"WSL2%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB/#wsl2","text":"WSL ( Windows Subsystem Linux ) Windows Linux \u5b50\u7cfb\u7edf\u662f Win10 \u65b0\u589e\u7684\u4e00\u4e2a\u529f\u80fd\uff0c\u4f7f\u7528 WSL \u53ef\u4ee5\u76f4\u63a5\u5728 Windows \u4e0a\u9762\u4f7f\u7528\u548c\u8fd0\u884c Linux \u7a0b\u5e8f\u548c\u547d\u4ee4\u3002\u800c WSL2 \u662f WSL \u7684\u4e00\u4e2a\u65b0\u7684\u7248\u672c\uff0c\u81ea Windows10 2004 \u7248\u672c\u53d1\u5e03\u4e4b\u540e\uff0cWSL2 \u53ef\u4ee5\u76f4\u63a5\u5728 Windows10 \u4e2d\u76f4\u63a5\u4f7f\u7528\uff0c\u76f8\u6bd4\u4e8e WSL\uff0cWSL2 \u4f7f\u7528\u4e86 HyperV \u6280\u672f\uff0c\u89e3\u51b3\u4e86 WSL \u4e0d\u80fd\u4f7f\u7528 docker \u7684\u95ee\u9898\uff0c\u6027\u80fd\u4e5f\u5f97\u5230\u4e86\u8fdb\u4e00\u6b65\u7684\u63d0\u5347\uff0cWSL2 \u4e5f\u53ef\u4ee5\u8bf4\u662f\u4f7f\u7528\u771f\u6b63\u7684\u3001\u66f4\u52a0\u5b8c\u6574\u7684 Linux \u5185\u6838\u3002 \u56de\u5230\u6b63\u9898\uff0c\u5f00\u542f\u548c\u5b89\u88c5 WSL2 \u9ed8\u8ba4\u662f\u5b89\u88c5\u5728 C \u76d8\u4e2d\uff0c\u968f\u7740\u8f6f\u4ef6\u7684\u5b89\u88c5\u548c\u5b9e\u9645\u9879\u76ee\u7684\u5f00\u53d1\uff0c\u5f88\u5feb\u5c31\u80fd\u4f7f C \u76d8\u5b58\u50a8\u7a7a\u95f4\u544a\u6025\uff0c\u6240\u4ee5\u4e00\u4e2a\u89e3\u51b3\u529e\u6cd5\u5c31\u662f\u5c06 WSL2 \u6570\u636e\u8fdb\u884c\u8fc1\u79fb\uff0c\u5c06 WSL2 \u5b89\u88c5\u5728 C \u76d8\u4e4b\u5916\u7684\u5927\u5bb9\u91cf\u5b58\u50a8\u4f4d\u7f6e\u3002\u5f53\u7136 C \u76d8\u8db3\u591f\u5927\u7684\u8bdd\uff0c\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u6570\u636e\u8fc1\u79fb\u5de5\u4f5c\u3002","title":"WSL2\u6570\u636e\u8fc1\u79fb"},{"location":"WSL2%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB/#_1","text":"\u901a\u8fc7\u8f6f\u94fe\u63a5\u7684\u65b9\u5f0f\u4fee\u6539 VHDX \u6587\u4ef6\u7684\u5b58\u653e\u78c1\u76d8\uff0c\u8fbe\u5230\u7f13\u89e3 C \u76d8\u5b58\u50a8\u538b\u529b\u7684\u95ee\u9898\u3002 \u5b9e\u73b0\u65b9\u5f0f\uff1a $newLocation = \"E:\\WSL\\Ubuntu-WSL2\\\" cd ~\\AppData\\Local\\Packages\\CanonicalGroupLimited.Ubuntu20.04onWindows_79rhkp1fndgsc\\LocalState wsl --shutdown Optimize-VHD .\\ext4.vhdx -Mode Full mkdir $newLocation -Force mv ext4.vhdx $newLocation cd .. rm LocalState New-Item -ItemType SymbolicLink -Path \" LocalState \" -Target $newLocation","title":"\u8f6f\u94fe\u63a5\u7684\u65b9\u5f0f"},{"location":"WSL2%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB/#_2","text":"\u9996\u5148\u5148\u5173\u95ed WSL wsl --shutdown \u67e5\u770b\u7cfb\u7edf\u4fe1\u606f\uff1a wsl -l -v \u5bfc\u51fa\u7cfb\u7edf\u6587\u4ef6\uff1a wsl --export <DistroName> <PathToTarArchive> \u5220\u9664\u7cfb\u7edf\uff1a wsl --unregister <DistroName> \u4ece\u6307\u5b9a\u4f4d\u7f6e\u5bfc\u5165\u65b0\u7684\u7cfb\u7edf\uff1a wsl --import <DistronName> <PathToTarArchive> \u8bbe\u7f6e\u9ed8\u8ba4\u7528\u6237\uff1a ubuntu2004.exe config --default-user xxx","title":"\u6587\u4ef6\u5bfc\u51fa\u65b9\u5f0f"},{"location":"about/","text":"","title":"\u5173\u4e8e"},{"location":"asyncio%E4%B8%8A%E7%AF%87/","text":"","title":"Asyncio\u4e0a\u7bc7"},{"location":"asyncio%E4%B8%8B%E7%AF%87/","text":"","title":"Asyncio\u4e0b\u7bc7"},{"location":"asyncio%E4%B8%AD%E7%AF%87/","text":"","title":"Asyncio\u4e2d\u7bc7"},{"location":"%E4%BA%8B%E4%BB%B6%E8%BD%AE%E8%AF%A2/","text":"","title":"I/O\u591a\u8def\u590d\u7528"},{"location":"%E5%85%B3%E4%BA%8E%E4%BA%91%E5%93%A5/","text":"\u5173\u4e8e\u4e91\u54e5 \u00b6 \ud83c\ude32 \u522b\u95ee\uff0c\u95ee\u5c31\u662f\u5927\u4f6c\uff01 \ud83d\ude0e","title":"\u5173\u4e8e\u4e91\u54e5"},{"location":"%E5%85%B3%E4%BA%8E%E4%BA%91%E5%93%A5/#_1","text":"\ud83c\ude32 \u522b\u95ee\uff0c\u95ee\u5c31\u662f\u5927\u4f6c\uff01 \ud83d\ude0e","title":"\u5173\u4e8e\u4e91\u54e5"},{"location":"%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/","text":"\u5355\u4f8b\u6a21\u5f0f \u00b6 \u5355\u4f8b\u6a21\u5f0f\uff08Singleton Pattern\uff09\u662f\u4e00\u79cd\u5e38\u7528\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u8be5\u6a21\u5f0f\u7684\u4e3b\u8981\u76ee\u7684\u662f\u786e\u4fdd**\u67d0\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5b58\u5728**\u3002 \u5355\u4f8b\u6a21\u5f0f\u5c5e\u4e8e\u521b\u5efa\u578b\u6a21\u5f0f\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u6700\u4f73\u521b\u5efa\u5bf9\u8c61\u7684\u6700\u4f73\u65b9\u5f0f\uff0c\u8fd9\u79cd\u6a21\u5f0f\u6d89\u53ca\u5230\u4e00\u4e2a\u5355\u4e00\u7684\u7c7b\uff0c\u6539\u7c7b\u8d1f\u8d23\u521b\u5efa\u81ea\u5df1\u7684\u5bf9\u8c61\uff0c\u540c\u65f6\u786e\u4fdd\u53ea\u6709\u4e00\u4e2a\u5355\u5bf9\u8c61\u88ab\u521b\u5efa\uff0c\u8fd9\u4e2a\u7c7b\u63d0\u4f9b\u4e86\u4e00\u79cd\u8bbf\u95ee\u5176\u552f\u4e00\u7684\u5bf9\u8c61\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\uff0c\u4e0d\u9700\u8981\u5b9e\u4f8b\u5316\u8be5\u7c7b\u7684\u5bf9\u8c61\u3002 \u2714 \u6ce8\u610f\uff1a - \u5355\u4f8b\u7c7b\u53ea\u80fd\u6709\u4e00\u4e2a\u5b9e\u4f8b - \u5355\u4f8b\u7c7b\u5fc5\u987b\u81ea\u5df1\u521b\u5efa\u81ea\u5df1\u7684\u552f\u4e00\u5b9e\u4f8b - \u5355\u4f8b\u7c7b\u5fc5\u987b\u7ed9\u6240\u6709\u7684\u5176\u5b83\u5bf9\u8c61\u63d0\u4f9b\u8fd9\u4e2a\u5b9e\u4f8b 1. Python \u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f\u7684\u51e0\u79cd\u65b9\u5f0f \u00b6 1.1 \u4f7f\u7528\u6a21\u5757 \u00b6 \u5176\u5b9e\uff0cPython\u7684\u6a21\u5757\u5c31\u662f\u4e00\u4e2a\u5355\u4f8b\u6a21\u5f0f\uff0c\u6a21\u5757\u5728\u7b2c\u4e00\u5bfc\u5165\u7684\u65f6\u5019\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a .pyc \u6587\u4ef6\uff0c\u5f53\u4e8c\u6b21\u5bfc\u5165\u7684\u65f6\uff0c\u4f1a\u76f4\u63a5\u52a0\u8f7d .pyc \u6587\u4ef6\uff0c\u800c\u4e0d\u4f1a\u518d\u6b21\u6267\u884c\u6a21\u5757\u4ee3\u7801\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u76f8\u5173\u7684\u51fd\u6570\u548c\u6570\u636e\u5b9a\u4e49\u5728\u4e00\u4e2a\u6a21\u5757\u4e2d\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u5355\u4f8b\u5bf9\u8c61\u3002 1.2 \u4f7f\u7528\u88c5\u9970\u5668 \u00b6 \u88c5\u9970\u5668\u5916\u5c42\u53d8\u91cf\u5b9a\u4e49\u4e00\u4e2a\u5b57\u5178\uff0c\u91cc\u9762\u5b58\u653e\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5f53\u7b2c\u4e00\u6b21\u521b\u5efa\u5b9e\u4f8b\u540e\u5c06\u8be5\u5b9e\u4f8b\u4fdd\u5b58\u5230\u8fd9\u4e2a\u5b57\u5178\u5230\u90a3\u4e2a\u4e2d\uff0c\u4ee5\u540e\u6bcf\u6b21\u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5224\u65ad\u5b57\u5178\u4e2d\u662f\u5426\u5b58\u5728\u5b9e\u4f8b\uff0c\u5982\u679c\u5b58\u5728\u76f4\u63a5\u8fd4\u56de\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u5e76\u4fdd\u5b58\u3002 def singleton ( cls ): _instance = {} def _singleton ( * args , ** kwargs ): if cls not in _instance : _instance [ cls ] = cls ( * args , ** kwargs ) return _instance return _sigleton @singleton class A ( object ): a = 1 def __init__ ( self , x = 0 ): self . x = x print ( \"Init Method of A\" ) a1 = A ( 2 ) a2 = A ( 3 ) print ( id ( a1 ), id ( a2 )) 1.3 \u4f7f\u7528\u7c7b \u00b6 \u8c03\u7528\u7c7b\u4e2d\u7684 instance \u65b9\u6cd5\u3002 class Singleton ( object ): def __init__ ( self , * args , ** kwargs ): pass @classmethod def get_instance ( cls , * args , ** kwargs ): # \u5229\u7528\u53cd\u5c04\u673a\u5236\uff0c\u770b\u770b\u8fd9\u4e2a\u7c7b\u662f\u5426\u6709_instance\u5c5e\u6027 if not hasattr ( Singletonm , \"_instance\" ): Singleton . _instance = Singleton ( * args , ** kwargs ) return Singleton . _instance s1 = Singleton () # \u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u65e0\u6cd5\u4fdd\u8bc1\u5355\u4f8b s2 = Singleton . get_instance () # \u53ea\u6709\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u5355\u4f8b \ud83d\ude1c \u6ce8\u610f\uff1a \u4e0a\u8ff0\u4f7f\u7528\u7c7b _instance \u5c5e\u6027\u521b\u5efa\u7684\u5355\u4f8b\u5728\u5355\u7ebf\u7a0b\u6a21\u5f0f\u4e0b\u662f\u5b89\u5168\u7684\uff0c\u4f46\u662f\u5728\u591a\u7ebf\u7a0b\u6a21\u5f0f\u4e0b\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u56e0\u4e3a\uff0c\u5728\u591a\u7ebf\u7a0b\u6a21\u5f0f\u4e0b\uff0c\u4e00\u4e2a\u5bf9\u8c61\u521b\u5efa\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53e6\u5916\u4e00\u4e2a\u5bf9\u8c61\u4e5f\u521b\u5efa\u4e86\uff0c\u5f53\u5b83\u5224\u65ad\u7684\u65f6\u5019\u4f1a\u5148\u53bb\u83b7\u53d6 _instance \u5c5e\u6027\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u65f6\u5019\u8fd8\u6ca1\u6709\u521b\u5efa\u7684\u8bdd\u5c31\u4f1a\u8c03\u7528 init() \u65b9\u6cd5\uff0c\u5728\u591a\u7ebf\u7a0b\u60c5\u51b5\u4e0b\u4f1a\u88ab\u591a\u6b21\u8c03\u7528\uff0c\u5c31\u4f1a\u4ea7\u751f\u591a\u4e2a\u5b9e\u4f8b\u3002 1.4 \u4f7f\u7528\u7c7b\uff08\u52a0\u9501\uff09 \u00b6 \u4e3a\u4e86\u89e3\u51b3\u7c7b\u65b9\u5f0f\u521b\u5efa\u5355\u4f8b\u5728\u591a\u7ebf\u7a0b\u4e0b\u5b58\u5728\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u5728\u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u5019\u8fdb\u884c\u52a0\u9501\uff0c\u4ece\u800c\u4fdd\u8bc1\u5355\u4f8b\u7684\u6b63\u786e\u6027\u3002 import time import threading class Sigleton ( object ): _instance_lock = threading . Lock () def __init__ ( self , * args , ** kwargs ): time . sleep ( 1 ) @classmethod def get_instance ( cls , * args , ** kwargs ): if not hasattr ( Singleton , \"_instance\" ): with Singleton . _instance_lock : if not hasattr ( Singleton , \"_instance\" ): Singleton . _instance = Singleton ( * args , ** kwargs ) return Singleton . _instance def task ( args ): obj = Singleton . get_instance ( args ) print ( obj ) for i in range ( 10 ): thread = threading . Thread ( target = task , args = [ i , ]) thread . start () obj = Sigleton . get_instance () print ( obj ) 1.5 \u57fa\u4e8e __new__ \u65b9\u6cd5\u521b\u5efa\u5355\u4f8b \u00b6 \u4e00\u4e2a\u5bf9\u8c61\u7684\u5b9e\u4f8b\u5316\u8fc7\u7a0b\u662f\u5148\u6267\u884c\u7c7b\u7684 __new__ \u65b9\u6cd5\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\uff0c\u9ed8\u8ba4\u4f1a\u4f7f\u7528 object \u7684 __new__ \u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u7136\u540e\u518d\u8c03\u7528 __init__ \u65b9\u6cd5\uff0c\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u7279\u6027\u6765\u5b9e\u73b0\u5355\u4f8b\u3002\u5728\u4e00\u4e2a\u7c7b\u7684 __new__ \u65b9\u6cd5\u4e2d\uff0c\u5148\u5224\u65ad\u662f\u4e0d\u662f\u5b58\u5728\u5b9e\u4f8b\uff0c\u5982\u679c\u5b58\u5728\u5b9e\u4f8b\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5b9e\u4f8b\u5c31\u521b\u5efa\u3002 import threading class Singleton ( object ): _instance_lock = threading . Lock () def __init__ ( self , * args , ** kwargs ): pass def __new__ ( self , * args , ** kwargs ): if not hasattr ( cls , \"_instance\" ): with Singleton . _instance_lock : if not hasattr ( cls , \"_instance\" ): Singleton . _instance = super () . __new__ ( cls ) return Singleton . _instance obj1 = Singleton () obj2 = Singleton () def task ( args ): obj = Singleton () print ( obj ) 1.6 \u57fa\u4e8e metaclass \u65b9\u5f0f\u7684\u5b9e\u73b0 \u00b6 import threading class SingletonType ( type ): _instance_lock = threading . Lock () def __call__ ( cls , * args , ** kwargs ): if not hasattr ( cls , \"_instance\" ): with SingletonType . _instance_lock : if not hasattr ( cls , \"_instance\" ): cls . _instance = super ( SingletonType , cls ) . __call__ ( * args , ** kwargs ) return cls . _instance class Foo ( metaclass = SingletonType ): def __init__ ( self , name ): self . name = name obj1 = Foo ( 'name' ) obj2 = Foo ( 'name' ) print ( obj1 , obj2 )","title":"\u5355\u4f8b\u6a21\u5f0f"},{"location":"%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#_1","text":"\u5355\u4f8b\u6a21\u5f0f\uff08Singleton Pattern\uff09\u662f\u4e00\u79cd\u5e38\u7528\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u8be5\u6a21\u5f0f\u7684\u4e3b\u8981\u76ee\u7684\u662f\u786e\u4fdd**\u67d0\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5b58\u5728**\u3002 \u5355\u4f8b\u6a21\u5f0f\u5c5e\u4e8e\u521b\u5efa\u578b\u6a21\u5f0f\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u6700\u4f73\u521b\u5efa\u5bf9\u8c61\u7684\u6700\u4f73\u65b9\u5f0f\uff0c\u8fd9\u79cd\u6a21\u5f0f\u6d89\u53ca\u5230\u4e00\u4e2a\u5355\u4e00\u7684\u7c7b\uff0c\u6539\u7c7b\u8d1f\u8d23\u521b\u5efa\u81ea\u5df1\u7684\u5bf9\u8c61\uff0c\u540c\u65f6\u786e\u4fdd\u53ea\u6709\u4e00\u4e2a\u5355\u5bf9\u8c61\u88ab\u521b\u5efa\uff0c\u8fd9\u4e2a\u7c7b\u63d0\u4f9b\u4e86\u4e00\u79cd\u8bbf\u95ee\u5176\u552f\u4e00\u7684\u5bf9\u8c61\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\uff0c\u4e0d\u9700\u8981\u5b9e\u4f8b\u5316\u8be5\u7c7b\u7684\u5bf9\u8c61\u3002 \u2714 \u6ce8\u610f\uff1a - \u5355\u4f8b\u7c7b\u53ea\u80fd\u6709\u4e00\u4e2a\u5b9e\u4f8b - \u5355\u4f8b\u7c7b\u5fc5\u987b\u81ea\u5df1\u521b\u5efa\u81ea\u5df1\u7684\u552f\u4e00\u5b9e\u4f8b - \u5355\u4f8b\u7c7b\u5fc5\u987b\u7ed9\u6240\u6709\u7684\u5176\u5b83\u5bf9\u8c61\u63d0\u4f9b\u8fd9\u4e2a\u5b9e\u4f8b","title":"\u5355\u4f8b\u6a21\u5f0f"},{"location":"%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#1-python","text":"","title":"1. Python \u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f\u7684\u51e0\u79cd\u65b9\u5f0f"},{"location":"%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#11","text":"\u5176\u5b9e\uff0cPython\u7684\u6a21\u5757\u5c31\u662f\u4e00\u4e2a\u5355\u4f8b\u6a21\u5f0f\uff0c\u6a21\u5757\u5728\u7b2c\u4e00\u5bfc\u5165\u7684\u65f6\u5019\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a .pyc \u6587\u4ef6\uff0c\u5f53\u4e8c\u6b21\u5bfc\u5165\u7684\u65f6\uff0c\u4f1a\u76f4\u63a5\u52a0\u8f7d .pyc \u6587\u4ef6\uff0c\u800c\u4e0d\u4f1a\u518d\u6b21\u6267\u884c\u6a21\u5757\u4ee3\u7801\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u76f8\u5173\u7684\u51fd\u6570\u548c\u6570\u636e\u5b9a\u4e49\u5728\u4e00\u4e2a\u6a21\u5757\u4e2d\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u5355\u4f8b\u5bf9\u8c61\u3002","title":"1.1 \u4f7f\u7528\u6a21\u5757"},{"location":"%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#12","text":"\u88c5\u9970\u5668\u5916\u5c42\u53d8\u91cf\u5b9a\u4e49\u4e00\u4e2a\u5b57\u5178\uff0c\u91cc\u9762\u5b58\u653e\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5f53\u7b2c\u4e00\u6b21\u521b\u5efa\u5b9e\u4f8b\u540e\u5c06\u8be5\u5b9e\u4f8b\u4fdd\u5b58\u5230\u8fd9\u4e2a\u5b57\u5178\u5230\u90a3\u4e2a\u4e2d\uff0c\u4ee5\u540e\u6bcf\u6b21\u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5224\u65ad\u5b57\u5178\u4e2d\u662f\u5426\u5b58\u5728\u5b9e\u4f8b\uff0c\u5982\u679c\u5b58\u5728\u76f4\u63a5\u8fd4\u56de\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u5e76\u4fdd\u5b58\u3002 def singleton ( cls ): _instance = {} def _singleton ( * args , ** kwargs ): if cls not in _instance : _instance [ cls ] = cls ( * args , ** kwargs ) return _instance return _sigleton @singleton class A ( object ): a = 1 def __init__ ( self , x = 0 ): self . x = x print ( \"Init Method of A\" ) a1 = A ( 2 ) a2 = A ( 3 ) print ( id ( a1 ), id ( a2 ))","title":"1.2 \u4f7f\u7528\u88c5\u9970\u5668"},{"location":"%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#13","text":"\u8c03\u7528\u7c7b\u4e2d\u7684 instance \u65b9\u6cd5\u3002 class Singleton ( object ): def __init__ ( self , * args , ** kwargs ): pass @classmethod def get_instance ( cls , * args , ** kwargs ): # \u5229\u7528\u53cd\u5c04\u673a\u5236\uff0c\u770b\u770b\u8fd9\u4e2a\u7c7b\u662f\u5426\u6709_instance\u5c5e\u6027 if not hasattr ( Singletonm , \"_instance\" ): Singleton . _instance = Singleton ( * args , ** kwargs ) return Singleton . _instance s1 = Singleton () # \u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u65e0\u6cd5\u4fdd\u8bc1\u5355\u4f8b s2 = Singleton . get_instance () # \u53ea\u6709\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u5355\u4f8b \ud83d\ude1c \u6ce8\u610f\uff1a \u4e0a\u8ff0\u4f7f\u7528\u7c7b _instance \u5c5e\u6027\u521b\u5efa\u7684\u5355\u4f8b\u5728\u5355\u7ebf\u7a0b\u6a21\u5f0f\u4e0b\u662f\u5b89\u5168\u7684\uff0c\u4f46\u662f\u5728\u591a\u7ebf\u7a0b\u6a21\u5f0f\u4e0b\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u56e0\u4e3a\uff0c\u5728\u591a\u7ebf\u7a0b\u6a21\u5f0f\u4e0b\uff0c\u4e00\u4e2a\u5bf9\u8c61\u521b\u5efa\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53e6\u5916\u4e00\u4e2a\u5bf9\u8c61\u4e5f\u521b\u5efa\u4e86\uff0c\u5f53\u5b83\u5224\u65ad\u7684\u65f6\u5019\u4f1a\u5148\u53bb\u83b7\u53d6 _instance \u5c5e\u6027\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u65f6\u5019\u8fd8\u6ca1\u6709\u521b\u5efa\u7684\u8bdd\u5c31\u4f1a\u8c03\u7528 init() \u65b9\u6cd5\uff0c\u5728\u591a\u7ebf\u7a0b\u60c5\u51b5\u4e0b\u4f1a\u88ab\u591a\u6b21\u8c03\u7528\uff0c\u5c31\u4f1a\u4ea7\u751f\u591a\u4e2a\u5b9e\u4f8b\u3002","title":"1.3 \u4f7f\u7528\u7c7b"},{"location":"%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#14","text":"\u4e3a\u4e86\u89e3\u51b3\u7c7b\u65b9\u5f0f\u521b\u5efa\u5355\u4f8b\u5728\u591a\u7ebf\u7a0b\u4e0b\u5b58\u5728\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u5728\u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u5019\u8fdb\u884c\u52a0\u9501\uff0c\u4ece\u800c\u4fdd\u8bc1\u5355\u4f8b\u7684\u6b63\u786e\u6027\u3002 import time import threading class Sigleton ( object ): _instance_lock = threading . Lock () def __init__ ( self , * args , ** kwargs ): time . sleep ( 1 ) @classmethod def get_instance ( cls , * args , ** kwargs ): if not hasattr ( Singleton , \"_instance\" ): with Singleton . _instance_lock : if not hasattr ( Singleton , \"_instance\" ): Singleton . _instance = Singleton ( * args , ** kwargs ) return Singleton . _instance def task ( args ): obj = Singleton . get_instance ( args ) print ( obj ) for i in range ( 10 ): thread = threading . Thread ( target = task , args = [ i , ]) thread . start () obj = Sigleton . get_instance () print ( obj )","title":"1.4 \u4f7f\u7528\u7c7b\uff08\u52a0\u9501\uff09"},{"location":"%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#15-__new__","text":"\u4e00\u4e2a\u5bf9\u8c61\u7684\u5b9e\u4f8b\u5316\u8fc7\u7a0b\u662f\u5148\u6267\u884c\u7c7b\u7684 __new__ \u65b9\u6cd5\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\uff0c\u9ed8\u8ba4\u4f1a\u4f7f\u7528 object \u7684 __new__ \u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u7136\u540e\u518d\u8c03\u7528 __init__ \u65b9\u6cd5\uff0c\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u7279\u6027\u6765\u5b9e\u73b0\u5355\u4f8b\u3002\u5728\u4e00\u4e2a\u7c7b\u7684 __new__ \u65b9\u6cd5\u4e2d\uff0c\u5148\u5224\u65ad\u662f\u4e0d\u662f\u5b58\u5728\u5b9e\u4f8b\uff0c\u5982\u679c\u5b58\u5728\u5b9e\u4f8b\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5b9e\u4f8b\u5c31\u521b\u5efa\u3002 import threading class Singleton ( object ): _instance_lock = threading . Lock () def __init__ ( self , * args , ** kwargs ): pass def __new__ ( self , * args , ** kwargs ): if not hasattr ( cls , \"_instance\" ): with Singleton . _instance_lock : if not hasattr ( cls , \"_instance\" ): Singleton . _instance = super () . __new__ ( cls ) return Singleton . _instance obj1 = Singleton () obj2 = Singleton () def task ( args ): obj = Singleton () print ( obj )","title":"1.5 \u57fa\u4e8e __new__ \u65b9\u6cd5\u521b\u5efa\u5355\u4f8b"},{"location":"%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#16-metaclass","text":"import threading class SingletonType ( type ): _instance_lock = threading . Lock () def __call__ ( cls , * args , ** kwargs ): if not hasattr ( cls , \"_instance\" ): with SingletonType . _instance_lock : if not hasattr ( cls , \"_instance\" ): cls . _instance = super ( SingletonType , cls ) . __call__ ( * args , ** kwargs ) return cls . _instance class Foo ( metaclass = SingletonType ): def __init__ ( self , name ): self . name = name obj1 = Foo ( 'name' ) obj2 = Foo ( 'name' ) print ( obj1 , obj2 )","title":"1.6 \u57fa\u4e8e metaclass \u65b9\u5f0f\u7684\u5b9e\u73b0"},{"location":"%E5%B9%B6%E5%8F%91%E6%A6%82%E8%BF%B0/","text":"1. \u5e76\u53d1\u4ecb\u7ecd \u00b6 1.1 \u8fdb\u7a0b\u548c\u7ebf\u7a0b \u00b6 \u8fdb\u7a0b\u6307\u7684\u662f\u7a0b\u5e8f\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4e00\u6b21\u6267\u884c\u8fc7\u7a0b\uff0c\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u7684\u5206\u914d\u548c\u8c03\u5ea6\u7684\u4e00\u4e2a\u72ec\u7acb\u5355\u4f4d\u3002\u7ebf\u7a0b\u662f\u4e00\u4e2a\u6267\u884c\u5b9e\u4f53\uff0c\u662fCPU\u8c03\u5ea6\u548c\u5206\u6d3e\u4efb\u52a1\u7684\u57fa\u672c\u7684\u5355\u4f4d\uff0c\u5b83\u662f\u6bd4\u8fdb\u7a0b\u66f4\u5c0f\u7684\u80fd\u72ec\u7acb\u8fd0\u884c\u7684\u57fa\u672c\u5355\u4f4d\u3002\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u521b\u5efa\u548c\u9500\u6bc1\u591a\u4e2a\u7ebf\u7a0b\uff0c\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u662f\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\u7684\u3002 2. \u5e76\u53d1\u548c\u5e76\u884c \u00b6 \u591a\u7ebf\u7a0b\u5728\u4e00\u4e2aCPU\u6838\u5fc3\u4e0a\u8fd0\u884c\u5c31\u662f\u5e76\u53d1\uff0c\u591a\u7ebf\u7a0b\u5728\u591a\u6838CPU\u4e0a\u8fd0\u884c\u5c31\u662f\u5e76\u884c\u3002 \u5e76\u53d1\u64cd\u4f5c\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u5bf9\u4efb\u52a1\u7684\u8c03\u5ea6\uff0c\u591a\u4e2a\u4efb\u52a1\u4e4b\u95f4\u8c03\u5ea6\u7684\u4ea4\u51fa\u6240\u5360\u7528\u7684\u65f6\u95f4\u7247\uff0c\u4ea4\u66ff\u8fd0\u884c\uff1b\u5e76\u884c\u5219\u662f\u5c06\u591a\u4e2a\u4efb\u52a1\u5206\u914d\u5230CPU\u7684\u591a\u4e2a\u6838\u5fc3\u4e0a\uff0c\u540c\u65f6\u8fd0\u884c\u3002","title":"\u5e76\u53d1\u6982\u8ff0"},{"location":"%E5%B9%B6%E5%8F%91%E6%A6%82%E8%BF%B0/#1","text":"","title":"1. \u5e76\u53d1\u4ecb\u7ecd"},{"location":"%E5%B9%B6%E5%8F%91%E6%A6%82%E8%BF%B0/#11","text":"\u8fdb\u7a0b\u6307\u7684\u662f\u7a0b\u5e8f\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4e00\u6b21\u6267\u884c\u8fc7\u7a0b\uff0c\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u7684\u5206\u914d\u548c\u8c03\u5ea6\u7684\u4e00\u4e2a\u72ec\u7acb\u5355\u4f4d\u3002\u7ebf\u7a0b\u662f\u4e00\u4e2a\u6267\u884c\u5b9e\u4f53\uff0c\u662fCPU\u8c03\u5ea6\u548c\u5206\u6d3e\u4efb\u52a1\u7684\u57fa\u672c\u7684\u5355\u4f4d\uff0c\u5b83\u662f\u6bd4\u8fdb\u7a0b\u66f4\u5c0f\u7684\u80fd\u72ec\u7acb\u8fd0\u884c\u7684\u57fa\u672c\u5355\u4f4d\u3002\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u521b\u5efa\u548c\u9500\u6bc1\u591a\u4e2a\u7ebf\u7a0b\uff0c\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u662f\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\u7684\u3002","title":"1.1 \u8fdb\u7a0b\u548c\u7ebf\u7a0b"},{"location":"%E5%B9%B6%E5%8F%91%E6%A6%82%E8%BF%B0/#2","text":"\u591a\u7ebf\u7a0b\u5728\u4e00\u4e2aCPU\u6838\u5fc3\u4e0a\u8fd0\u884c\u5c31\u662f\u5e76\u53d1\uff0c\u591a\u7ebf\u7a0b\u5728\u591a\u6838CPU\u4e0a\u8fd0\u884c\u5c31\u662f\u5e76\u884c\u3002 \u5e76\u53d1\u64cd\u4f5c\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u5bf9\u4efb\u52a1\u7684\u8c03\u5ea6\uff0c\u591a\u4e2a\u4efb\u52a1\u4e4b\u95f4\u8c03\u5ea6\u7684\u4ea4\u51fa\u6240\u5360\u7528\u7684\u65f6\u95f4\u7247\uff0c\u4ea4\u66ff\u8fd0\u884c\uff1b\u5e76\u884c\u5219\u662f\u5c06\u591a\u4e2a\u4efb\u52a1\u5206\u914d\u5230CPU\u7684\u591a\u4e2a\u6838\u5fc3\u4e0a\uff0c\u540c\u65f6\u8fd0\u884c\u3002","title":"2. \u5e76\u53d1\u548c\u5e76\u884c"},{"location":"%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/","text":"% \u548c format \u7684\u7528\u6cd5 \u00b6 1. % \u7528\u6cd5 \u00b6 1.1. \u6d6e\u70b9\u6570\u683c\u5f0f\u5316\u8f93\u51fa \u00b6 \u7b26\u53f7 \u63cf\u8ff0 %o \u516b\u8fdb\u5236 %d \u5341\u8fdb\u5236 %x \u5341\u516d\u8fdb\u5236 %f \u4fdd\u7559\u5c0f\u6570\u70b9 %e \u4fdd\u7559\u5c0f\u6570\u70b9\u540e\u9762\u516d\u4f4d\u6709\u6548\u6570\u5b57\uff0c\u6307\u6570\u5f62\u5f0f\u8f93\u51fa %g \u5728\u4fdd\u8bc1\u516d\u4f4d\u6709\u6548\u6570\u5b57\u7684\u524d\u63d0\u4e0b\uff0c\u4f7f\u7528\u5c0f\u6570\u65b9\u5f0f\uff0c\u5426\u5219\u4f7f\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5 \u793a\u4f8b\uff1a print ( \" %f \" % 1.11 ) # \u9ed8\u8ba4\u4fdd\u75596\u4e3a\u5c0f\u6570 print ( \" %.1f \" % 1.11 ) # \u4fdd\u75591\u4f4d\u5c0f\u6570 print ( \" %e \" % 1.11 ) # \u9ed8\u8ba46\u4f4d\u5c0f\u6570\uff0c\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5 print ( \" %.3e \" % 1.11 ) # \u4fdd\u75593\u4f4d\u5c0f\u6570 print ( \" %g \" % 1111.1111 ) # \u9ed8\u8ba46\u4f4d\u6709\u6548\u6570\u5b57 print ( \" %.7g \" % 1111.1111 ) # \u4fdd\u75597\u4f4d\u6709\u6548\u6570\u5b57 print ( \" %.2g \" % 1111.1111 ) # \u4fdd\u75592\u4f4d\u6709\u6548\u6570\u5b57\uff0c\u81ea\u52a8\u8f6c\u6362\u6210\u4e3a\u79d1\u5b66\u8ba1\u6570\u6cd5 1.2. \u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u8f93\u51fa \u00b6 \u7b26\u53f7 \u63cf\u8ff0 %s \u9ed8\u8ba4\u5b57\u7b26\u4e32\u8f93\u51fa\u683c\u5f0f %10s \u53f3\u5bf9\u9f50\u3001\u5360\u4f4d\u7b2610\u4f4d %-10s \u5de6\u5bf9\u9f50\u3001\u5360\u4f4d\u7b2610\u4f4d %.2s \u622a\u53d62\u4f4d\u5b57\u7b26\u4e32 %10.2s 10\u4f4d\u5360\u4f4d\u7b26\uff0c\u622a\u53d6\u4e24\u4f4d\u5b57\u7b26\u4e32 \u793a\u4f8b\uff1a print ( \" %s \" % \"Hi\" ) # \u9ed8\u8ba4\u5b57\u7b26\u4e32\u8f93\u51fa print ( \" %20s \" % \"Hi\" ) # \u53f3\u5bf9\u9f50\uff0c20\u4f4d\u5360\u4f4d\u7b26\uff0c\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u591f\u7a7a\u683c\u8865\u4f4d print ( \" %-20s \" % \"Hi\" ) # \u5de6\u5bf9\u9f50\uff0c20\u4f4d\u5360\u4f4d\u7b26\uff0c\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u591f\u7a7a\u683c\u8865\u4f4d print ( \" %.2s \" % \"Hi\" ) # \u4fdd\u75592\u4f4d print ( \" %10.2s \" % \"Hi\" ) # \u53f3\u5bf9\u9f50\uff0c10\u4f4d\u5360\u4f4d\u7b26\uff0c\u4fdd\u75592\u4f4d\u5b57\u7b26\u4e32 print ( \" %-10.2s \" % \"Hi\" ) # \u5de6\u5bf9\u9f50\uff0c10\u4f4d\u5360\u4f4d\u7b26\uff0c\u4fdd\u75592\u4f4d\u5b57\u7b26\u4e32 2. format\u683c\u5f0f\u5316\u8f93\u51fa \u00b6 \u76f8\u5bf9\u57fa\u672c\u7684\u683c\u5f0f\u5316\u8f93\u51fa\u91c7\u7528 % \u7684\u65b9\u6cd5\uff0c format() \u51fd\u6570\u7684\u529f\u80fd\u66f4\u52a0\u5f3a\u5927\uff0c\u8be5\u51fd\u6570\u628a\u5b57\u7b26\u4e32\u5f53\u6210\u4e00\u4e2a\u6a21\u677f\uff0c\u901a\u8fc7\u4f20\u5165\u7684\u53c2\u6570\u8fdb\u884c\u683c\u5f0f\u5316\uff0c\u5e76\u4e14\u4f7f\u7528\u5927\u62ec\u53f7 {} \u4f5c\u4e3a\u7279\u6b8a\u7684\u5b57\u7b26\u4ee3\u66ff % \u3002 2.1. \u4f4d\u7f6e\u5339\u914d \u00b6 \u4e0d\u5e26\u7f16\u53f7\uff0c\u5373 {} \uff0c\u53c2\u6570\u7684\u987a\u5e8f\u4e0d\u53ef\u4ee5\u6539\u53d8 \u5e26\u6570\u5b57\u7f16\u53f7\uff0c\u5373 {1} {2} \uff0c\u53c2\u6570\u7684\u987a\u5e8f\u53ef\u4ee5\u6539\u53d8 \u5e26\u5173\u952e\u5b57\uff0c\u5373 {a} {tom} \u793a\u4f8b\uff1a print ( ' {} {} ' . format ( 'hello' , 'world' )) # \u4e0d\u5e26\u5b57\u6bb5 print ( ' {0} {1} ' . format ( 'hello' , 'world' )) # \u5e26\u6570\u5b57\u7f16\u53f7 print ( ' {0} {1} {0} ' . format ( 'hello' , 'world' )) # \u6253\u4e71\u987a\u5e8f print ( ' {a} {tom} {a} ' . format ( tom = 'hello' , a = 'world' )) # \u5e26\u5173\u952e\u5b57 2.2. \u683c\u5f0f\u8f6c\u6362 \u00b6 \u7b26\u53f7 \u63cf\u8ff0 b \u4e8c\u8fdb\u5236\uff0c\u5c06\u6570\u5b57\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u8f93\u51fa c \u5b57\u7b26\uff0c\u8f6c\u6362\u6210\u4e3aUnicode\u5b57\u7b26\u4e32 d \u5341\u8fdb\u5236\u6574\u6570 o \u516b\u8fdb\u5236\u8f93\u51fa\uff0c\u5c06\u6570\u5b57\u8f6c\u6362\u6210\u4e3a\u516b\u8fdb\u5236\u8f93\u51fa x \u5341\u516d\u8fdb\u5236\u8f93\u51fa e \u5e42\u7b26\u53f7\uff0c\u7528\u79d1\u5b66\u8ba1\u7b97\u6cd5\u6253\u5370\u6570\u5b57\uff0c\u7528 e \u8868\u793a\u5e42 g \u4e00\u822c\u683c\u5f0f\uff0c\u5f53\u6570\u503c\u6bd4\u8f83\u5927\u7684\u65f6\u5019\uff0c\u91c7\u7528\u5e42\u7684\u5f62\u5f0f\u6253\u5370 n \u6570\u5b57\uff0c\u5f53\u6570\u503c\u4e3a\u6574\u6570\u65f6\u548c d \u76f8\u540c\uff0c\u5f53\u503c\u4e3a\u6d6e\u70b9\u6570\u65f6\u548c g \u76f8\u540c\uff0c\u4e0d\u540c\u7684\u662f\u5b83\u4f1a\u6839\u636e\u533a\u57df\u8bbe\u7f6e\u63d2\u5165\u6570\u5b57\u5206\u9694\u7b26 % \u767e\u5206\u53f7\uff0c\u5c06\u6570\u503c\u4e58\u4ee5100\u7136\u540e\u4f7f\u7528fixed-point('f')\u683c\u5f0f\u6253\u5370\uff0c\u503c\u540e\u9762\u4f1a\u6709\u4e00\u4e2a\u767e\u5206\u53f7 \u793a\u4f8b\uff1a print ( \" {0:b} \" . format ( 3 )) # 11 print ( \" {:c} \" . format ( 20 )) # \u25a1 print ( \" {:%} \" . format ( 20 )) # 2000.000000% 2.3. \u8fdb\u9636\u7528\u6cd5 \u00b6 \u5de6\u5bf9\u9f50\u3001\u53f3\u5bf9\u9f50\u3001\u5c45\u4e2d\u53ca\u4f4d\u6570\u8865\u5168 - < \uff08\u9ed8\u8ba4\uff09\u5de6\u5bf9\u9f50\u3001 > \u53f3\u5bf9\u9f50\u3001 ^ \u4e2d\u95f4\u5bf9\u9f50\u3001 = \uff08\u53ea\u7528\u4e8e\u6570\u5b57\uff09\u5728\u5c0f\u6570\u70b9\u540e\u8fdb\u884c\u8865\u9f50 - \u53d6\u4f4d\u6570 {:4s} \u3001 {:.2f} \u7b49","title":"\u683c\u5f0f\u5316\u8f93\u51fa"},{"location":"%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/#format","text":"","title":"% \u548c format \u7684\u7528\u6cd5"},{"location":"%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/#1","text":"","title":"1. % \u7528\u6cd5"},{"location":"%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/#11","text":"\u7b26\u53f7 \u63cf\u8ff0 %o \u516b\u8fdb\u5236 %d \u5341\u8fdb\u5236 %x \u5341\u516d\u8fdb\u5236 %f \u4fdd\u7559\u5c0f\u6570\u70b9 %e \u4fdd\u7559\u5c0f\u6570\u70b9\u540e\u9762\u516d\u4f4d\u6709\u6548\u6570\u5b57\uff0c\u6307\u6570\u5f62\u5f0f\u8f93\u51fa %g \u5728\u4fdd\u8bc1\u516d\u4f4d\u6709\u6548\u6570\u5b57\u7684\u524d\u63d0\u4e0b\uff0c\u4f7f\u7528\u5c0f\u6570\u65b9\u5f0f\uff0c\u5426\u5219\u4f7f\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5 \u793a\u4f8b\uff1a print ( \" %f \" % 1.11 ) # \u9ed8\u8ba4\u4fdd\u75596\u4e3a\u5c0f\u6570 print ( \" %.1f \" % 1.11 ) # \u4fdd\u75591\u4f4d\u5c0f\u6570 print ( \" %e \" % 1.11 ) # \u9ed8\u8ba46\u4f4d\u5c0f\u6570\uff0c\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5 print ( \" %.3e \" % 1.11 ) # \u4fdd\u75593\u4f4d\u5c0f\u6570 print ( \" %g \" % 1111.1111 ) # \u9ed8\u8ba46\u4f4d\u6709\u6548\u6570\u5b57 print ( \" %.7g \" % 1111.1111 ) # \u4fdd\u75597\u4f4d\u6709\u6548\u6570\u5b57 print ( \" %.2g \" % 1111.1111 ) # \u4fdd\u75592\u4f4d\u6709\u6548\u6570\u5b57\uff0c\u81ea\u52a8\u8f6c\u6362\u6210\u4e3a\u79d1\u5b66\u8ba1\u6570\u6cd5","title":"1.1. \u6d6e\u70b9\u6570\u683c\u5f0f\u5316\u8f93\u51fa"},{"location":"%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/#12","text":"\u7b26\u53f7 \u63cf\u8ff0 %s \u9ed8\u8ba4\u5b57\u7b26\u4e32\u8f93\u51fa\u683c\u5f0f %10s \u53f3\u5bf9\u9f50\u3001\u5360\u4f4d\u7b2610\u4f4d %-10s \u5de6\u5bf9\u9f50\u3001\u5360\u4f4d\u7b2610\u4f4d %.2s \u622a\u53d62\u4f4d\u5b57\u7b26\u4e32 %10.2s 10\u4f4d\u5360\u4f4d\u7b26\uff0c\u622a\u53d6\u4e24\u4f4d\u5b57\u7b26\u4e32 \u793a\u4f8b\uff1a print ( \" %s \" % \"Hi\" ) # \u9ed8\u8ba4\u5b57\u7b26\u4e32\u8f93\u51fa print ( \" %20s \" % \"Hi\" ) # \u53f3\u5bf9\u9f50\uff0c20\u4f4d\u5360\u4f4d\u7b26\uff0c\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u591f\u7a7a\u683c\u8865\u4f4d print ( \" %-20s \" % \"Hi\" ) # \u5de6\u5bf9\u9f50\uff0c20\u4f4d\u5360\u4f4d\u7b26\uff0c\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u591f\u7a7a\u683c\u8865\u4f4d print ( \" %.2s \" % \"Hi\" ) # \u4fdd\u75592\u4f4d print ( \" %10.2s \" % \"Hi\" ) # \u53f3\u5bf9\u9f50\uff0c10\u4f4d\u5360\u4f4d\u7b26\uff0c\u4fdd\u75592\u4f4d\u5b57\u7b26\u4e32 print ( \" %-10.2s \" % \"Hi\" ) # \u5de6\u5bf9\u9f50\uff0c10\u4f4d\u5360\u4f4d\u7b26\uff0c\u4fdd\u75592\u4f4d\u5b57\u7b26\u4e32","title":"1.2. \u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u8f93\u51fa"},{"location":"%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/#2-format","text":"\u76f8\u5bf9\u57fa\u672c\u7684\u683c\u5f0f\u5316\u8f93\u51fa\u91c7\u7528 % \u7684\u65b9\u6cd5\uff0c format() \u51fd\u6570\u7684\u529f\u80fd\u66f4\u52a0\u5f3a\u5927\uff0c\u8be5\u51fd\u6570\u628a\u5b57\u7b26\u4e32\u5f53\u6210\u4e00\u4e2a\u6a21\u677f\uff0c\u901a\u8fc7\u4f20\u5165\u7684\u53c2\u6570\u8fdb\u884c\u683c\u5f0f\u5316\uff0c\u5e76\u4e14\u4f7f\u7528\u5927\u62ec\u53f7 {} \u4f5c\u4e3a\u7279\u6b8a\u7684\u5b57\u7b26\u4ee3\u66ff % \u3002","title":"2. format\u683c\u5f0f\u5316\u8f93\u51fa"},{"location":"%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/#21","text":"\u4e0d\u5e26\u7f16\u53f7\uff0c\u5373 {} \uff0c\u53c2\u6570\u7684\u987a\u5e8f\u4e0d\u53ef\u4ee5\u6539\u53d8 \u5e26\u6570\u5b57\u7f16\u53f7\uff0c\u5373 {1} {2} \uff0c\u53c2\u6570\u7684\u987a\u5e8f\u53ef\u4ee5\u6539\u53d8 \u5e26\u5173\u952e\u5b57\uff0c\u5373 {a} {tom} \u793a\u4f8b\uff1a print ( ' {} {} ' . format ( 'hello' , 'world' )) # \u4e0d\u5e26\u5b57\u6bb5 print ( ' {0} {1} ' . format ( 'hello' , 'world' )) # \u5e26\u6570\u5b57\u7f16\u53f7 print ( ' {0} {1} {0} ' . format ( 'hello' , 'world' )) # \u6253\u4e71\u987a\u5e8f print ( ' {a} {tom} {a} ' . format ( tom = 'hello' , a = 'world' )) # \u5e26\u5173\u952e\u5b57","title":"2.1. \u4f4d\u7f6e\u5339\u914d"},{"location":"%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/#22","text":"\u7b26\u53f7 \u63cf\u8ff0 b \u4e8c\u8fdb\u5236\uff0c\u5c06\u6570\u5b57\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u8f93\u51fa c \u5b57\u7b26\uff0c\u8f6c\u6362\u6210\u4e3aUnicode\u5b57\u7b26\u4e32 d \u5341\u8fdb\u5236\u6574\u6570 o \u516b\u8fdb\u5236\u8f93\u51fa\uff0c\u5c06\u6570\u5b57\u8f6c\u6362\u6210\u4e3a\u516b\u8fdb\u5236\u8f93\u51fa x \u5341\u516d\u8fdb\u5236\u8f93\u51fa e \u5e42\u7b26\u53f7\uff0c\u7528\u79d1\u5b66\u8ba1\u7b97\u6cd5\u6253\u5370\u6570\u5b57\uff0c\u7528 e \u8868\u793a\u5e42 g \u4e00\u822c\u683c\u5f0f\uff0c\u5f53\u6570\u503c\u6bd4\u8f83\u5927\u7684\u65f6\u5019\uff0c\u91c7\u7528\u5e42\u7684\u5f62\u5f0f\u6253\u5370 n \u6570\u5b57\uff0c\u5f53\u6570\u503c\u4e3a\u6574\u6570\u65f6\u548c d \u76f8\u540c\uff0c\u5f53\u503c\u4e3a\u6d6e\u70b9\u6570\u65f6\u548c g \u76f8\u540c\uff0c\u4e0d\u540c\u7684\u662f\u5b83\u4f1a\u6839\u636e\u533a\u57df\u8bbe\u7f6e\u63d2\u5165\u6570\u5b57\u5206\u9694\u7b26 % \u767e\u5206\u53f7\uff0c\u5c06\u6570\u503c\u4e58\u4ee5100\u7136\u540e\u4f7f\u7528fixed-point('f')\u683c\u5f0f\u6253\u5370\uff0c\u503c\u540e\u9762\u4f1a\u6709\u4e00\u4e2a\u767e\u5206\u53f7 \u793a\u4f8b\uff1a print ( \" {0:b} \" . format ( 3 )) # 11 print ( \" {:c} \" . format ( 20 )) # \u25a1 print ( \" {:%} \" . format ( 20 )) # 2000.000000%","title":"2.2. \u683c\u5f0f\u8f6c\u6362"},{"location":"%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/#23","text":"\u5de6\u5bf9\u9f50\u3001\u53f3\u5bf9\u9f50\u3001\u5c45\u4e2d\u53ca\u4f4d\u6570\u8865\u5168 - < \uff08\u9ed8\u8ba4\uff09\u5de6\u5bf9\u9f50\u3001 > \u53f3\u5bf9\u9f50\u3001 ^ \u4e2d\u95f4\u5bf9\u9f50\u3001 = \uff08\u53ea\u7528\u4e8e\u6570\u5b57\uff09\u5728\u5c0f\u6570\u70b9\u540e\u8fdb\u884c\u8865\u9f50 - \u53d6\u4f4d\u6570 {:4s} \u3001 {:.2f} \u7b49","title":"2.3. \u8fdb\u9636\u7528\u6cd5"},{"location":"%E9%93%BE%E8%A1%A8/","text":"\u94fe\u8868 \u00b6 \u548c\u6570\u7ec4\u4e00\u6837\uff0c\u94fe\u8868\u4e5f\u662f\u4e00\u79cd\u7ebf\u6027\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f5c\u4e3a\u6700\u57fa\u7840\u3001\u6700\u5e38\u7528\u7684\u4e24\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u6570\u7ec4\u548c\u94fe\u8868\u7ecf\u5e38\u62ff\u6765\u6bd4\u8f83\u3002 1. \u94fe\u8868\u7684\u5b9a\u4e49 \u00b6 \u94fe\u8868\u662f\u4e00\u79cd\u7ebf\u6027\u8868\u6570\u636e\u7ed3\u6784\uff1b \u4ece\u5e95\u5c42\u7684\u6570\u636e\u5b58\u50a8\u7ed3\u6784\u6765\u770b\uff0c\u94fe\u8868\u4e0d\u9700\u8981\u4e00\u5757\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u800c\u662f\u901a\u8fc7\u6307\u9488\u5c06\u4e00\u7ec4\u96f6\u6563\u7684\u5185\u5b58\u5757\u4e32\u8054\u8d77\u6765\u4f7f\u7528\uff0c\u8fd9\u4e5f\u662f\u94fe\u8868\u548c\u6570\u7ec4\u7684\u6700\u5927\u7684\u533a\u522b\uff1b \u94fe\u8868\u7684\u6bcf\u4e2a\u5185\u5b58\u5757\u88ab\u79f0\u4e3a\u94fe\u8868\u7684\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u9664\u4e86\u8981\u5b58\u50a8\u6570\u636e\u4e4b\u5916\uff0c\u8fd8\u9700\u8981\u8bb0\u5f55\u5f53\u524d\u8282\u70b9\u7684\u4e0a\uff08\u4e0b\uff09\u8282\u70b9\u5730\u5740\u4fe1\u606f\u3002 2. \u94fe\u8868\u7684\u7279\u70b9 \u00b6 \u63d2\u5165\u3001\u5220\u9664\u7684\u6548\u7387\u9ad8\uff0c\u53ea\u9700\u8981\u8003\u8651\u76f8\u90bb\u8282\u70b9\u7684\u6307\u9488\u6539\u53d8\uff0c\u4e0d\u9700\u8981\u79fb\u52a8\u6570\u636e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(1) \uff1b \u968f\u673a\u67e5\u627e\u7684\u6548\u7387\u4f4e\uff0c\u9700\u8981\u6839\u636e\u6307\u9488\u904d\u5386\u8282\u70b9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n) \uff1b \u5185\u5b58\u7a7a\u95f4\u5360\u7528\u8f83\u5927\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u9664\u4e86\u8981\u5b58\u50a8\u8282\u70b9\u672c\u8eab\u7684\u6570\u636e\u4e4b\u5916\u8fd8\u9700\u8981\u5b58\u50a8\u4e0a\uff08\u4e0b\uff09\u8282\u70b9\u7684\u5730\u5740\u3002 3. \u5e38\u89c1\u7684\u94fe\u8868\u7c7b\u578b \u00b6 \u5e38\u89c1\u7684\u94fe\u8868\u6709\u4e09\u79cd\uff1a - \u5355\u5411\u94fe\u8868 - \u53cc\u7ebf\u94fe\u8868 - \u5faa\u73af\u94fe\u8868 3.1 \u5355\u5411\u94fe\u8868 \u00b6 \u5982\u56fe\u6240\u793a\uff0c\u5355\u5411\u94fe\u8868\u6bcf\u4e2a\u8282\u70b9\u53ea\u5305\u542b\u4e00\u4e2a\u540e\u7ee7\u8282\u70b9\uff0c\u5355\u5411\u94fe\u8868\u7684 \u5934\u8282\u70b9 \u548c \u5c3e\u8282\u70b9 \u6bd4\u8f83\u7279\u6b8a\uff0c\u5934\u8282\u70b9\u7528\u6765\u8bb0\u5f55\u94fe\u8868\u7684\u57fa\u5730\u5740\uff0c\u662f\u94fe\u8868\u7684\u8d77\u70b9\uff0c\u5c3e\u8282\u70b9\u7684\u540e\u7ee7\u6307\u9488\u4e0d\u6307\u5411\u4efb\u4f55\u8282\u70b9\uff0c\u800c\u662f\u6307\u5411\u4e00\u4e2a\u7a7a\u5730\u5740 NULL \u3002 \u73b0\u5728\u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684\u5355\u5411\u94fe\u8868\u7684\u8282\u70b9\u7c7b\uff1a class LinkNode : def __init__ ( self , data_ , next_ = None ): self . data_ = data_ self . next_ = next_ 3.1.1 \u5355\u94fe\u8868\u7684\u57fa\u672c\u64cd\u4f5c \u00b6 3.1.1.1 \u63d2\u5165\u5143\u7d20 \u00b6 \u94fe\u8868\u7684\u5143\u7d20\u63d2\u5165\uff0c\u53ef\u4ee5\u5c06\u5143\u7d20\u63d2\u5165\u5934\u90e8\u3001\u5c3e\u90e8\u548c\u4e2d\u95f4\u63d2\u5165\uff0c\u4e0d\u540c\u4f4d\u7f6e\u7684\u63d2\u5165\u65f6\u95f4\u590d\u6742\u5ea6\u7a0d\u6709\u4e0d\u540c\u3002 \u5934\u90e8\u63d2\u5165\u5143\u7d20 \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\u5e76\u5b58\u5165\u6570\u636e\uff0c\u5c06\u539f\u94fe\u8868\u7684\u5934\u90e8\u8282\u70b9\u94fe\u63a5\u5b58\u5165\u65b0\u8282\u70b9\u7684 next \u94fe\u63a5\u57df\uff0c\u8fd9\u4e00\u64cd\u4f5c\u5c06\u539f\u94fe\u8868\u6570\u636e\u94fe\u63a5\u5728\u65b0\u7684\u8282\u70b9\u540e\u9762\uff0c\u7136\u540e\u4fee\u6539\u5934\u90e8\u6307\u9488\u53d8\u91cf\u6307\u5411\u65b0\u8282\u70b9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1) \u3002 q = LinkNode ( 13 ) q . next = head . next head . next = q \u4e2d\u95f4\u63d2\u5165\u548c\u5c3e\u90e8\u63d2\u5165 \u60f3\u8981\u5728\u5355\u5411\u94fe\u8868\u7684\u67d0\u4e2a\u4f4d\u7f6e\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\uff0c\u5fc5\u987b\u5148\u627e\u5230\u63d2\u5165\u4f4d\u7f6e\u7684\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u56e0\u4e3a\u65b0\u7684\u8282\u70b9\u9700\u8981\u63d2\u5165\u5728\u8be5\u8282\u70b9\u7684\u540e\u9762\uff0c\u9700\u8981\u4fee\u6539\u5b83\u7684 next \u57df\u3002 q = LinkNode ( 13 ) q . next = pre . next pre . next = q 3.1.1.2 \u5220\u9664\u5143\u7d20 \u00b6 \u5220\u9664\u94fe\u8868\u4e2d\u7684\u5143\u7d20\u5b9e\u9645\u5c31\u662f\u8c03\u6574\u94fe\u8868\u7ed3\u6784\u6765\u5220\u9664\u8282\u70b9\u5143\u7d20\u3002 # \u5220\u9664\u5934\u90e8\u5143\u7d20 head = head . next # \u5220\u9664\u4e2d\u95f4\u6216\u5c3e\u90e8\u5143\u7d20 pre . next = pre . next . next","title":"\u94fe\u8868"},{"location":"%E9%93%BE%E8%A1%A8/#_1","text":"\u548c\u6570\u7ec4\u4e00\u6837\uff0c\u94fe\u8868\u4e5f\u662f\u4e00\u79cd\u7ebf\u6027\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f5c\u4e3a\u6700\u57fa\u7840\u3001\u6700\u5e38\u7528\u7684\u4e24\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u6570\u7ec4\u548c\u94fe\u8868\u7ecf\u5e38\u62ff\u6765\u6bd4\u8f83\u3002","title":"\u94fe\u8868"},{"location":"%E9%93%BE%E8%A1%A8/#1","text":"\u94fe\u8868\u662f\u4e00\u79cd\u7ebf\u6027\u8868\u6570\u636e\u7ed3\u6784\uff1b \u4ece\u5e95\u5c42\u7684\u6570\u636e\u5b58\u50a8\u7ed3\u6784\u6765\u770b\uff0c\u94fe\u8868\u4e0d\u9700\u8981\u4e00\u5757\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u800c\u662f\u901a\u8fc7\u6307\u9488\u5c06\u4e00\u7ec4\u96f6\u6563\u7684\u5185\u5b58\u5757\u4e32\u8054\u8d77\u6765\u4f7f\u7528\uff0c\u8fd9\u4e5f\u662f\u94fe\u8868\u548c\u6570\u7ec4\u7684\u6700\u5927\u7684\u533a\u522b\uff1b \u94fe\u8868\u7684\u6bcf\u4e2a\u5185\u5b58\u5757\u88ab\u79f0\u4e3a\u94fe\u8868\u7684\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u9664\u4e86\u8981\u5b58\u50a8\u6570\u636e\u4e4b\u5916\uff0c\u8fd8\u9700\u8981\u8bb0\u5f55\u5f53\u524d\u8282\u70b9\u7684\u4e0a\uff08\u4e0b\uff09\u8282\u70b9\u5730\u5740\u4fe1\u606f\u3002","title":"1. \u94fe\u8868\u7684\u5b9a\u4e49"},{"location":"%E9%93%BE%E8%A1%A8/#2","text":"\u63d2\u5165\u3001\u5220\u9664\u7684\u6548\u7387\u9ad8\uff0c\u53ea\u9700\u8981\u8003\u8651\u76f8\u90bb\u8282\u70b9\u7684\u6307\u9488\u6539\u53d8\uff0c\u4e0d\u9700\u8981\u79fb\u52a8\u6570\u636e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(1) \uff1b \u968f\u673a\u67e5\u627e\u7684\u6548\u7387\u4f4e\uff0c\u9700\u8981\u6839\u636e\u6307\u9488\u904d\u5386\u8282\u70b9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n) \uff1b \u5185\u5b58\u7a7a\u95f4\u5360\u7528\u8f83\u5927\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u9664\u4e86\u8981\u5b58\u50a8\u8282\u70b9\u672c\u8eab\u7684\u6570\u636e\u4e4b\u5916\u8fd8\u9700\u8981\u5b58\u50a8\u4e0a\uff08\u4e0b\uff09\u8282\u70b9\u7684\u5730\u5740\u3002","title":"2. \u94fe\u8868\u7684\u7279\u70b9"},{"location":"%E9%93%BE%E8%A1%A8/#3","text":"\u5e38\u89c1\u7684\u94fe\u8868\u6709\u4e09\u79cd\uff1a - \u5355\u5411\u94fe\u8868 - \u53cc\u7ebf\u94fe\u8868 - \u5faa\u73af\u94fe\u8868","title":"3. \u5e38\u89c1\u7684\u94fe\u8868\u7c7b\u578b"},{"location":"%E9%93%BE%E8%A1%A8/#31","text":"\u5982\u56fe\u6240\u793a\uff0c\u5355\u5411\u94fe\u8868\u6bcf\u4e2a\u8282\u70b9\u53ea\u5305\u542b\u4e00\u4e2a\u540e\u7ee7\u8282\u70b9\uff0c\u5355\u5411\u94fe\u8868\u7684 \u5934\u8282\u70b9 \u548c \u5c3e\u8282\u70b9 \u6bd4\u8f83\u7279\u6b8a\uff0c\u5934\u8282\u70b9\u7528\u6765\u8bb0\u5f55\u94fe\u8868\u7684\u57fa\u5730\u5740\uff0c\u662f\u94fe\u8868\u7684\u8d77\u70b9\uff0c\u5c3e\u8282\u70b9\u7684\u540e\u7ee7\u6307\u9488\u4e0d\u6307\u5411\u4efb\u4f55\u8282\u70b9\uff0c\u800c\u662f\u6307\u5411\u4e00\u4e2a\u7a7a\u5730\u5740 NULL \u3002 \u73b0\u5728\u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684\u5355\u5411\u94fe\u8868\u7684\u8282\u70b9\u7c7b\uff1a class LinkNode : def __init__ ( self , data_ , next_ = None ): self . data_ = data_ self . next_ = next_","title":"3.1 \u5355\u5411\u94fe\u8868"},{"location":"%E9%93%BE%E8%A1%A8/#311","text":"","title":"3.1.1 \u5355\u94fe\u8868\u7684\u57fa\u672c\u64cd\u4f5c"},{"location":"%E9%93%BE%E8%A1%A8/#3111","text":"\u94fe\u8868\u7684\u5143\u7d20\u63d2\u5165\uff0c\u53ef\u4ee5\u5c06\u5143\u7d20\u63d2\u5165\u5934\u90e8\u3001\u5c3e\u90e8\u548c\u4e2d\u95f4\u63d2\u5165\uff0c\u4e0d\u540c\u4f4d\u7f6e\u7684\u63d2\u5165\u65f6\u95f4\u590d\u6742\u5ea6\u7a0d\u6709\u4e0d\u540c\u3002 \u5934\u90e8\u63d2\u5165\u5143\u7d20 \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\u5e76\u5b58\u5165\u6570\u636e\uff0c\u5c06\u539f\u94fe\u8868\u7684\u5934\u90e8\u8282\u70b9\u94fe\u63a5\u5b58\u5165\u65b0\u8282\u70b9\u7684 next \u94fe\u63a5\u57df\uff0c\u8fd9\u4e00\u64cd\u4f5c\u5c06\u539f\u94fe\u8868\u6570\u636e\u94fe\u63a5\u5728\u65b0\u7684\u8282\u70b9\u540e\u9762\uff0c\u7136\u540e\u4fee\u6539\u5934\u90e8\u6307\u9488\u53d8\u91cf\u6307\u5411\u65b0\u8282\u70b9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1) \u3002 q = LinkNode ( 13 ) q . next = head . next head . next = q \u4e2d\u95f4\u63d2\u5165\u548c\u5c3e\u90e8\u63d2\u5165 \u60f3\u8981\u5728\u5355\u5411\u94fe\u8868\u7684\u67d0\u4e2a\u4f4d\u7f6e\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\uff0c\u5fc5\u987b\u5148\u627e\u5230\u63d2\u5165\u4f4d\u7f6e\u7684\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u56e0\u4e3a\u65b0\u7684\u8282\u70b9\u9700\u8981\u63d2\u5165\u5728\u8be5\u8282\u70b9\u7684\u540e\u9762\uff0c\u9700\u8981\u4fee\u6539\u5b83\u7684 next \u57df\u3002 q = LinkNode ( 13 ) q . next = pre . next pre . next = q","title":"3.1.1.1 \u63d2\u5165\u5143\u7d20"},{"location":"%E9%93%BE%E8%A1%A8/#3112","text":"\u5220\u9664\u94fe\u8868\u4e2d\u7684\u5143\u7d20\u5b9e\u9645\u5c31\u662f\u8c03\u6574\u94fe\u8868\u7ed3\u6784\u6765\u5220\u9664\u8282\u70b9\u5143\u7d20\u3002 # \u5220\u9664\u5934\u90e8\u5143\u7d20 head = head . next # \u5220\u9664\u4e2d\u95f4\u6216\u5c3e\u90e8\u5143\u7d20 pre . next = pre . next . next","title":"3.1.1.2 \u5220\u9664\u5143\u7d20"}]}